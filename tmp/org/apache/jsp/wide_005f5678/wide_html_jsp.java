/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.21.v20190926
 * Generated at: 2023-01-29 17:29:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wide_005f5678;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.ptg.plugins.IPluginMenu;
import org.ptg.plugins.IPlugin;
import org.ptg.plugins.IPluginManager;
import org.ptg.util.*;
import org.ptg.util.db.*;
import java.util.*;
import org.ptg.http2.handlers.*;
import org.ptg.util.TaskSpec;
import java.util.*;
import org.ptg.http2.handlers.GetMenuGroup;

public final class wide_html_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.ptg.http2.handlers");
    _jspx_imports_packages.add("org.ptg.util.db");
    _jspx_imports_packages.add("org.ptg.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.ptg.plugins.IPluginMenu");
    _jspx_imports_classes.add("org.ptg.plugins.IPlugin");
    _jspx_imports_classes.add("org.ptg.util.TaskSpec");
    _jspx_imports_classes.add("org.ptg.plugins.IPluginManager");
    _jspx_imports_classes.add("org.ptg.http2.handlers.GetMenuGroup");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<!--\r\n");
      out.write("/*\r\n");
      out.write("Licensed under gpl.\r\n");
      out.write("Copyright (c) 2010 sumit singh\r\n");
      out.write("http://www.gnu.org/licenses/gpl.html\r\n");
      out.write("Use at your own risk\r\n");
      out.write("Other licenses may apply please refer to individual source files.\r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write("-webkit-transform:rotate(30deg);\r\n");
      out.write("-->\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\"\r\n");
      out.write("\tcontent=\"text/html;  charset=windows-1250\">\r\n");
      out.write("<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("<title>WIDE - Web IDE</title>\r\n");
      out.write("<script src=\"/site/includes/js/ace/ace.js\" type=\"text/javascript\"\r\n");
      out.write("\tcharset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/includes/js/ace/theme-eclipse.js\"\r\n");
      out.write("\ttype=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/includes/js/ace/mode-javascript.js\"\r\n");
      out.write("\ttype=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/includes/js/ace/mode-java.js\" type=\"text/javascript\"\r\n");
      out.write("\tcharset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/d3js/d3.v3.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/d3js/d3.csv.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\t\r\n");
      out.write("<script src=\"/site/d3js/contour.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/d3js/hexbin.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/d3js/sankey.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/d3js/d3box.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/d3js/gauge.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"/site/d3js/bullet.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<script type=\"text/javascript\" src=\"/site/dojo/dojo/dojo.js\"\r\n");
      out.write("\tdjConfig=\"parseOnLoad: true\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t\tvar debug  = false;\r\n");
      out.write("\t\tvar wideconfig = {\r\n");
      out.write("\t\t\t\"bkimage\":\t\"\",\r\n");
      out.write("\t\t\t\"showgrid\": \"\",\r\n");
      out.write("\t\t\t\"load_design_on_open\":\"false\",\r\n");
      out.write("\t\t\t\"load_design_with_graph\":\"false\",//<--to remove this\r\n");
      out.write("\t\t\t\"load_graph_on_design_open\":\"false\", //<--to keep this\r\n");
      out.write("\t\t\t\"mapping_level\":\"10\", //<--to keep this\r\n");
      out.write("\t\t\t\"rotation_step\":\"10\",\r\n");
      out.write("\t\t\t\"trace_ele\":\"1\",\r\n");
      out.write("\t\t\t\"stepMoverSize\":\"10\",\r\n");
      out.write("\t\t\t\"ieversion\":\"9\",\r\n");
      out.write("\t\t\t\"cross_hair\":\"true\",\r\n");
      out.write("\t\t\t\"global_canvas\":\"true\",\r\n");
      out.write("\t\t\t\"incr_zindex\":\"false\",\r\n");
      out.write("\t\t\t\"highlite_ports\":\"true\",\r\n");
      out.write("\t\t\t\"graph_type\" : \"JavaCode\",\r\n");
      out.write("\t\t\t\"units\":\"mm\",\r\n");
      out.write("\t\t\t\"material\":\"ALUM\",\r\n");
      out.write("\t\t\t\"pixelsPerUnit\":\"20\",\r\n");
      out.write("\t\t\t\"depth\":\".6\",\r\n");
      out.write("\t\t\t\"offsetx\":\"0\",\r\n");
      out.write("\t\t\t\"offsety\":\"0\",\r\n");
      out.write("\t\t\t\"toolsizeinmm\":\"5\",\r\n");
      out.write("\t\t\t\"modelheightmm\":\"5\",\r\n");
      out.write("\t\t\t\"modelheightinch\":\"5\",\r\n");
      out.write("\t\t\t\"iterstepmm\":\".1\",\r\n");
      out.write("\t\t\t\"iterstepinch\":\".1\",\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tvar wideconfigtoUse=\"Default\";\r\n");
      out.write("\r\n");
      out.write("\t\tvar ctrl = false;\r\n");
      out.write("\t\tvar shift = false;\r\n");
      out.write("\t\tvar alt = false;\r\n");
      out.write("\t\tvar cpBuffer = null;\r\n");
      out.write("\t\tvar cw = true,pw=true,hw=true,dw=true;\r\n");
      out.write("\t\tvar lastDropModule =null;\r\n");
      out.write("\t\tvar lastDropModuleGrp = null;\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\tvar urlMap = {};\r\n");
      out.write("\t\tvar dynaMod = true;\r\n");
      out.write("\t\turlMap.eventURL = \"/contevents\";\r\n");
      out.write("\t\turlMap.SiteUpTestUrl=\"/SiteUpTest?pageid=test\";\r\n");
      out.write("\t\turlMap.ServerUrl = \"http://localhost:8095/\";\r\n");
      out.write("\t\turlMap.deployURL = \"/site/SaveDeploy\";\r\n");
      out.write("\t\turlMap.iconURL = \"/site/icons.json\";\r\n");
      out.write("\t\turlMap.HTMLF2 = \"/site/images/all/html_f2.png\";\r\n");
      out.write("\t\turlMap.SHOWPAGES = \"/cmd?cmd=macro&m=showpages&c=\";\r\n");
      out.write("\t\turlMap.ARIALSVG=\"/site/bam_5678/arial.svg\";\r\n");
      out.write("\t\turlMap.GETGRAPH = \"/site/GetGraph\";\r\n");
      out.write("\t\turlMap.SERVICEBASE = \"/\";/*originally itwas: /myhtml/*/\r\n");
      out.write("\t\turlMap.PROCDOC = \"/site/GetProcDoc\";\r\n");
      out.write("\t\turlMap.ANONCONFIG = \"/site/GetAnonConfig\";\r\n");
      out.write("\t\turlMap.PROCESSJSON = \"/site/getprocess.json\";\t\t\t\t\r\n");
      out.write("\t\turlMap.GETGRAPHS =\"/site/GetGraphs\";\r\n");
      out.write("\t\turlMap.GETEVENTS =\"/site/GetEvents\";\r\n");
      out.write("\t\turlMap.GETSTEAMS =\"/site/GetStreams\";\r\n");
      out.write("\t\turlMap.GETSTEAMDefinition =\"/site/GetStreamDefinition\";\r\n");
      out.write("\t\turlMap.GETEventDefinition =\"/site/GetEventDefinition?EventType=\";\r\n");
      out.write("\t\turlMap.ReprocessRegions = \"/site/ReprocessRegions\";\r\n");
      out.write("\t\r\n");
      out.write("\t\turlMap.NEWPAGE =\"/site/newpage\";\r\n");
      out.write("\t\turlMap.RUNCMD =\"/site/cmd?cmd=\";\r\n");
      out.write("\t\turlMap.CompileClosure = \"/site/CompileClosure\";\r\n");
      out.write("\t\turlMap.SETCACHE = \"/site/SetCache\";\r\n");
      out.write("\t\turlMap.GETCACHE = \"/site/GetCache\";\r\n");
      out.write("\t\turlMap.HistoricalGraphs=\"/site/GetHistoricalGraphs?name=\";\r\n");
      out.write("\t\turlMap.HistoricalGraph=\"/site/GetHistoricalGraph?graphid=\";\r\n");
      out.write("\t\turlMap.ServerScript=\"/site/scriptcmd\";\r\n");
      out.write("\t\turlMap.CompileProcess=\"/site/CompileProcess\";\r\n");
      out.write("\t\turlMap.CompileJava=\"/site/CompileJava\";\r\n");
      out.write("\t\turlMap.ValidateProcess = \"/site/ValidateProcess\";\r\n");
      out.write("\t\turlMap.CompileGraphOnServer = \"/site/CompileGraphOnServer\";\r\n");
      out.write("\t\turlMap.SetVar = \"/site/SetVar\";\r\n");
      out.write("\t\turlMap.CompileCamelGraph = \"/site/CompileCamelGraph\";\r\n");
      out.write("\t\turlMap.AddRoutesToEngine = \"/site/AddRoutesToEngine\";\r\n");
      out.write("\t\turlMap.RestartRoutingEngine = \"/site/RestartRoutingEngine\";\r\n");
      out.write("\t\turlMap.StartRoutingEngine = \"/site/StartRoutingEngine\";\r\n");
      out.write("\t\turlMap.StopRoutingEngine = \"/site/StopRoutingEngine\";\r\n");
      out.write("\t\turlMap.FindItemsInRegion=\"/site/FindItemsInRegion\";\r\n");
      out.write("\t\turlMap.FindItemsViaIntersection=\"/site/FindItemsViaIntersection\";\r\n");
      out.write("\t\turlMap.MagicSpell1=\"/site/MagicSpell1\";\r\n");
      out.write("\t\turlMap.MagicSpell2=\"/site/MagicSpell2\";\r\n");
      out.write("\t\turlMap.MagicSpell3=\"/site/MagicSpell3\";\r\n");
      out.write("\t\turlMap.SaveEventObject=\"/site/SaveEventObject\";\r\n");
      out.write("\t\turlMap.CompileMapper=\"/site/CompileMapper\";\r\n");
      out.write("\t\turlMap.CompileMapper2=\"/site/CompileMapper2\";\r\n");
      out.write("\t\turlMap.GetBeanDefinition=\"/site/GetBeanDefinition\";\r\n");
      out.write("\t\turlMap.GetClasses = \"/site/GetClasses\";\r\n");
      out.write("\t\turlMap.GetMethods= \"/site/GetMethods\";\r\n");
      out.write("\t\turlMap.CompileDFStateMachine = \"/site/CompileDFStateMachine\";\r\n");
      out.write("\t\turlMap.DeleteFromServer = \"/site/DeleteFromServer\";\r\n");
      out.write("\t\turlMap.SaveConfig = \"/site/SaveConfig\";\r\n");
      out.write("\t\turlMap.GetConfig = \"/site/GetConfig\";\r\n");
      out.write("\t\turlMap.ParseSQL = \"/site/ParseSQL\";\r\n");
      out.write("\t\turlMap.CompileSQLMapper = \"/site/CompileSQLMapper\";\r\n");
      out.write("\t\turlMap.CompileTodoMapper = \"/site/CompileTodoMapper\";\r\n");
      out.write("\t\turlMap.CompileTemplate = \"/site/CompileTemplate\";\r\n");
      out.write("\t\turlMap.CompileFastCamel = \"/site/CompileFastCamel\";\r\n");
      out.write("\t\turlMap.CompileLocalGraph = \"/site/CompileLocalGraph\";\r\n");
      out.write("\t\turlMap.GetStaticComponents = \"/site/GetStaticComponents\";\r\n");
      out.write("\t\turlMap.GetStaticComponent = \"/site/GetStaticComponent\";\r\n");
      out.write("\t\turlMap.GetDesign = \"/site/GetDesign\";\r\n");
      out.write("\t\turlMap.GetDesigns = \"/site/GetDesigns\";\r\n");
      out.write("\t\turlMap.GetTodoDistances = \"/GetTodoDistances\";\r\n");
      out.write("\t\turlMap.FindBoundryRect=\"/FindBoundryRect\";\r\n");
      out.write("\t\turlMap.DevidePolygon=\"/DevidePolygon\";\r\n");
      out.write("\t\turlMap.CompileTypeMapping=\"/CompileTypeMapping\";\r\n");
      out.write("\t\turlMap.CompileTaskPlan=\"/CompileTaskPlan\";\r\n");
      out.write("\t\turlMap.CompileWebUIFlow=\"/CompileWebUIFlow\";\r\n");
      out.write("\t\turlMap.RunUICodeFlow=\"/site/RunUICodeFlow\";\r\n");
      out.write("\t\turlMap.CompileCamelPlan=\"/CompileCamelPlan\";\r\n");
      out.write("\t\turlMap.GetLayout=\"/GetLayout\";\r\n");
      out.write("\t\turlMap.CompileSubGraph=\"/CompileSubGraph\";\r\n");
      out.write("\t\turlMap.CompileObjectMapping=\"/site/CompileObjectMapping\";\r\n");
      out.write("\t\turlMap.ProcessingPlan = \"/ProcessingPlan\";\r\n");
      out.write("\t\turlMap.CompileTaskPlanV2=\"/CompileTaskPlanV2\";\r\n");
      out.write("\t\turlMap.RunAutomationProcess=\"/RunAutomationProcess\";\r\n");
      out.write("\t\turlMap.GetProtoLayout = \"/site/GetProtoLayout\";\r\n");
      out.write("\t\turlMap.GetTaskSpecs = \"/site/GetTaskSpecs\";\r\n");
      out.write("\t\turlMap.GetTaskSpecs = \"/site/GetAnnotSpecs\";\r\n");
      out.write("\t\turlMap.CompileTaskPlanToCode=\"/site/CompileTaskPlanToCode\";\r\n");
      out.write("\t\turlMap.CodeToPortJava=\"/site/CodeToPortJava\";\r\n");
      out.write("\t\turlMap.GetCanvas=\"/site/GetCanvas\";\r\n");
      out.write("\t\turlMap.GetRegEx = \"/site/GetRegEx\";\r\n");
      out.write("\t\turlMap.GetMenuGroup = \"/site/GetMenuGroup\";\r\n");
      out.write("\t\turlMap.GetSQLLayout= \"/site/GetSQLLayout\";\r\n");
      out.write("\t\turlMap.DownloadGcode= \"/site/DownloadGcode\";\r\n");
      out.write("\t\turlMap.UploadGcode= \"/site/UploadGcode\";\r\n");
      out.write("\t\turlMap.CompileGcode=\"/site/compileGcode\";\r\n");
      out.write("\t\turlMap.SaveRecentMenu=\"/site/SaveRecentMenu\";\r\n");
      out.write("\t\turlMap.CompilePattern=\"/site/CompilePattern\";\r\n");
      out.write("\t\turlMap.triangulate=\"/site/triangulate1\";\r\n");
      out.write("\t\turlMap.compileTagModel=\"/site/compileTagModel\";\r\n");
      out.write("\t\turlMap.GetEv3Path=\"/site/getEv3Path\";\r\n");
      out.write("\t\turlMap.ShapeMapper = \"/site/shapeMapper\";\r\n");
      out.write("\t\turlMap.ReadDro = \"/site/readDROOverHTTP\"; \r\n");
      out.write("\t\turlMap.CameraImage = \"/site/getCameraImage\"; \r\n");
      out.write("\t\turlMap.Vfd = \"/site/vfd\"; \r\n");
      out.write("\t\turlMap.MC1= \"/site/mc1\" ;\r\n");
      out.write("\t\turlMap.VaccumControl = \"/site/vaccumControl\" ;\r\n");
      out.write("\t\turlMap.GrblController = \"/site/GrblController\";\r\n");
      out.write("\t\turlMap.ShapeOffset = \"/site/ShapeOffset\";\r\n");
      out.write("\t\turlMap.ShapePixalate=\"/site/ShapePixalate\";\r\n");
      out.write("\t\turlMap.PathToPoints=\"/site/PathToPoints\";\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction getURL(str){\r\n");
      out.write("\t\t\treturn urlMap[str];\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar doLayout = false;\r\n");
      out.write("\t\t</script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/raphael-min.js\"\r\n");
      out.write("\ttype=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/timeline.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/graph2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/taggingsupport.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/includes/jsts/javascript.util.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/includes/jsts/jsts.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/groupNode.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/menu.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/comps.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/modules/custommodules.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/site/wide_5678/resources/js/dlg.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/plugin.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/codeEditor.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/maps.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/includes/js/tree/simpletreemenu.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"/site/includes/js/tree/simpletree.css\" />\r\n");
      out.write("\t<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/router.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/shapeeditor.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/anim_editor.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/shaperenderer.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/site/wide_5678/resources/js/cnc.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/site/wide_5678/resources/js/tosync.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/site/wide_5678/resources/js/ev3.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");

	String d3vis = request.getParameter("d3vis"); 
		if(d3vis!=null&&d3vis.equalsIgnoreCase("true")){

      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"/site/vis/d3.v2.js\"></script>\r\n");

	}

      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar taskSpecs = {};\r\n");
      out.write("\tvar annotSpecs = {};\r\n");
      out.write("\tvar globalShape = new Shape(\"globalShape\");\r\n");
      out.write("\t\r\n");
GetTaskSpecs getTaskSpecs = new GetTaskSpecs();
List<TaskSpec> taskList = getTaskSpecs.getTaskSpecs();
for(TaskSpec ts: taskList){
out.write("taskSpecs[\""+ts.getDispName()+"\"] = "+CommonUtil.toJson(ts)+" ;");
}
      out.write('\r');
      out.write('\n');
GetAnnotSpecs getAnnotSpecs = new GetAnnotSpecs();
Collection<AnnotSpec> annotSpecsList = getAnnotSpecs.getAnnotSpecs();
for(AnnotSpec ts: annotSpecsList){
out.write("annotSpecs[\""+ts.getDisplayName()+"\"] = "+CommonUtil.toJson(ts)+" ;");
}
      out.write('\r');
      out.write('\n');


boolean filterDroppables = true;
String fdStr= request.getParameter("filterdroppable") ;
if(fdStr==null || fdStr.length()<1) {
	filterDroppables = true;
}else {
	filterDroppables = false;
}

Set<String> dropableFilter = new java.util.HashSet<String>();
GetMenuGroup menuGroup = new GetMenuGroup();
List<Group> groupMenuList = menuGroup.getGroups();
for(Group g : groupMenuList){
	for(String str: g.getItems()){
		dropableFilter.add(str);
		}
}

      out.write("\r\n");
      out.write("</script>\r\n");

	List<String> mapperTaskList = new LinkedList<String>();
        	 			 mapperTaskList.add("ConcatMTask");
        	 			 mapperTaskList.add("LatLonMTask");
        	 			 mapperTaskList.add("ExpressionMTask");
        	 			 mapperTaskList.add("GeoHashMTask");
        	 			 mapperTaskList.add("ShapeToLatLonMTask");
        	 			 mapperTaskList.add("ConstantMTask");
        	 			 mapperTaskList.add("LookupMTask");
        	 			 mapperTaskList.add("AddressAppenderMTask");
        	 			 mapperTaskList.add("ConcatWithCommaMTask");
        	 			 mapperTaskList.add("IfMTask");
        	 			 mapperTaskList.add("EndMTask");
                         mapperTaskList.add("RemapMTask");
  Collections.sort(mapperTaskList);

      out.write('\r');
      out.write('\n');

	List<String>webUITaskList = new LinkedList<String>();
	        	 webUITaskList.add("GethttpUITask");
        				 webUITaskList.add("LogUITask");
            	 		 webUITaskList.add("ConstantUITask");
    Collections.sort(webUITaskList);

      out.write('\r');
      out.write('\n');

	String gm = request.getParameter("gm"); 
		if(gm!=null&&gm.equalsIgnoreCase("true")){

      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://maps.google.com/maps/api/js?sensor=true\"></script>\r\n");

	}

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"/site/wide_5678/resources/css/index.css\" />\r\n");
      out.write("\t\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("@import \"/site/dojo/dojox/layout/resources/ResizeHandle.css\";\r\n");
      out.write("\r\n");
      out.write("@import \"/site/dojo/dijit/themes/tundra/tundra.css\";\r\n");
      out.write("\r\n");
      out.write("@import\r\n");
      out.write("\"/site/dojo/dojo/resources/dojo.css\"\r\n");
      out.write("@import \"/site/dojo/dojo/resources/dnd.css\";\r\n");
      out.write("\tpath.chord {\r\n");
      out.write("  fill-opacity: .67;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footerbar { \r\n");
      out.write("position: fixed; \r\n");
      out.write("bottom: 0px; \r\n");
      out.write("width: 100%; \r\n");
      out.write("float: bottom; \r\n");
      out.write("height:25px; \r\n");
      out.write("background: #000; \r\n");
      out.write("color: #FFF; \r\n");
      out.write("margin: 0; \r\n");
      out.write("padding: 10px 0px 10px 0px; \r\n");
      out.write("} \r\n");
      out.write(".buttonOn {background-color: #4CAF50;} /* Green */\r\n");
      out.write(".buttonOff {background-color: #f44336;} /* Blue */\r\n");
      out.write("\r\n");
      out.write("#bottomCanvas{\r\n");
      out.write("width: 80px;\r\n");
      out.write("height:25px;\r\n");
      out.write("border-color: white;\r\n");
      out.write("background-color: #000000 ;\r\n");
      out.write("}\r\n");
      out.write("#messages{\r\n");
      out.write("width: 500px;\r\n");
      out.write("height:25px;\r\n");
      out.write("background-color: #000066;\r\n");
      out.write("}\r\n");
      out.write("#messageBox{\r\n");
      out.write("width: 500px;\r\n");
      out.write("height:25px;\r\n");
      out.write("background-color: #000000;\r\n");
      out.write("border:none;\r\n");
      out.write("color: #ffffff; \r\n");
      out.write("font-family: Verdana; \r\n");
      out.write("font-weight: normal; \r\n");
      out.write("font-size: 18px;\r\n");
      out.write("border: 2px solid white;\r\n");
      out.write("border-radius: 7px;\r\n");
      out.write("}\r\n");
      out.write(".greenText{ color:#00FF33; }\r\n");
      out.write("\r\n");
      out.write(".blueText{ color:blue; }\r\n");
      out.write("\r\n");
      out.write(".infoText{ color:white; }\r\n");
      out.write("\r\n");
      out.write(".redText{ color:red; }\r\n");
      out.write("\r\n");
      out.write(".orangeText{ color:orange; }\r\n");
      out.write("\r\n");
      out.write("#messageBox:focus { \r\n");
      out.write("    outline: none;\r\n");
      out.write("    border-color: #white;\r\n");
      out.write("    box-shadow: 0 0 20px #9ecaed;\r\n");
      out.write("}\r\n");
      out.write("#rightbottombar{\r\n");
      out.write("height:25px;\r\n");
      out.write("border-color: white;\r\n");
      out.write("background-color: #000000;\r\n");
      out.write("}\r\n");
      out.write("#top{    \r\n");
      out.write("width: 100%;   \r\n");
      out.write(" height: 1000px;    \r\n");
      out.write(" } \r\n");
      out.write("#dropbox {\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("\tborder: 2px solid #DDD;\r\n");
      out.write("\t-moz-border-radius: 8px;\r\n");
      out.write("\t-webkit-border-radius: 8px;\r\n");
      out.write("\tbackground-color: #FEFFEC;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tcolor: #BBB;\r\n");
      out.write("\tfont-size: 2em;\r\n");
      out.write("\tfont-family: Arial, sans-serif;\r\n");
      out.write("}\r\n");
      out.write("#Widgets {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;/* hide; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 100px;\r\n");
      out.write("\ttop: 200px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#propnode {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;/* scroll; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 250px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 940px;\r\n");
      out.write("\ttop: 50px;\r\n");
      out.write("\tfilter: alpha(opacity =   80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#docnode {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;/* scroll; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("\tleft: 1200px;\r\n");
      out.write("\ttop: 330px;\r\n");
      out.write("\tfilter: alpha(opacity =   80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#histnode {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: scroll; \r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("\tleft: 1200px;\r\n");
      out.write("\ttop: 100px;\r\n");
      out.write("\tfilter: alpha(opacity =   80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#cmdnode {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;/* scroll; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 660px;\r\n");
      out.write("\theight: 350px;\r\n");
      out.write("\tleft: 500px;\r\n");
      out.write("\ttop: 330px;\r\n");
      out.write("\tfilter: alpha(opacity =   80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#chartnode1 {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;/* hide; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 600px;\r\n");
      out.write("\ttop: 100px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#chartnode2 {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;/* hide; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 100px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#chartnode3 {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;/* hide; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 400px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#chartnode3 {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;/* hide; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 600px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write(".fixmoduleheading{\r\n");
      out.write("\theight: 20px;\r\n");
      out.write("\twidth:   100%;\r\n");
      out.write("\tbackground: orange;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("background: #c5deea; /* Old browsers */\r\n");
      out.write("background: -moz-linear-gradient(left,  #969696 0%, #9696f0 31%, #9696f0 100%); /* FF3.6+ */\r\n");
      out.write("background: -webkit-gradient(linear, left top, right top, color-stop(0%,#969696), color-stop(31%,#9696f0), color-stop(100%,#9696f0)); /* Chrome,Safari4+ */\r\n");
      out.write("background: -webkit-linear-gradient(left,  #969696 0%, #9696f0 31%, #9696f0 100%); /* Chrome10+,Safari5.1+ */\r\n");
      out.write("background: -o-linear-gradient(left,  #969696 0%, #9696f0 31%, #9696f0 100%); /* Opera 11.10+ */\r\n");
      out.write("background: -ms-linear-gradient(left,  #969696 0%, #9696f0 31%, #9696f0 100%); /* IE10+ */\r\n");
      out.write("background: linear-gradient(to right,  #969696 0%, #9696f0 31%, #9696f0 100%); /* W3C */\r\n");
      out.write("filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#969696', endColorstr='#9696f0',GradientType=1 ); /* IE6-9 */\r\n");
      out.write("\t border-top-left-radius: 10px;\r\n");
      out.write("\t border-top-right-radius: 10px;\r\n");
      out.write("\t -webkit-border-top-left-radius: 10px;\r\n");
      out.write("\t -webkit-border-top-right-radius: 10px;\r\n");
      out.write("\t \r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".anondefheading,#ndtype,.heading,#ndtype2{\r\n");
      out.write("\theight: 20px;\r\n");
      out.write("\twidth:   100%;\r\n");
      out.write("\tbackground: orange;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("background: #c5deea; /* Old browsers */\r\n");
      out.write("background: -moz-linear-gradient(left,  #c5deea 0%, #8abbd7 31%, #066dab 100%); /* FF3.6+ */\r\n");
      out.write("background: -webkit-gradient(linear, left top, right top, color-stop(0%,#c5deea), color-stop(31%,#8abbd7), color-stop(100%,#066dab)); /* Chrome,Safari4+ */\r\n");
      out.write("background: -webkit-linear-gradient(left,  #c5deea 0%,#8abbd7 31%,#066dab 100%); /* Chrome10+,Safari5.1+ */\r\n");
      out.write("background: -o-linear-gradient(left,  #c5deea 0%,#8abbd7 31%,#066dab 100%); /* Opera 11.10+ */\r\n");
      out.write("background: -ms-linear-gradient(left,  #c5deea 0%,#8abbd7 31%,#066dab 100%); /* IE10+ */\r\n");
      out.write("background: linear-gradient(to right,  #c5deea 0%,#8abbd7 31%,#066dab 100%); /* W3C */\r\n");
      out.write("filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#c5deea', endColorstr='#066dab',GradientType=1 ); /* IE6-9 */\r\n");
      out.write("\t border-top-left-radius: 10px;\r\n");
      out.write("\t border-top-right-radius: 10px;\r\n");
      out.write("\t -webkit-border-top-left-radius: 10px;\r\n");
      out.write("\t -webkit-border-top-right-radius: 10px;\r\n");
      out.write("\t \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* #ndtype,.heading,#ndtype2 {\r\n");
      out.write("\theight: 30px width:   100%;\r\n");
      out.write("\tborder: 1px solid #c0c0c0;\r\n");
      out.write("\tborder-bottom: 1px solid #9b9b9b;\r\n");
      out.write("\tbackground: #fff\r\n");
      out.write("\t\turl(/site/dojo/dijit/themes/tundra/images/buttonEnabled.png) repeat-x\r\n");
      out.write("\t\tbottom left;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("} */\r\n");
      out.write("\r\n");
      out.write("#chart1,#chart2,#chart3 {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tborder: 1px solid #c0c0c0;\r\n");
      out.write("\tborder-bottom: 1px solid #9b9b9b;\r\n");
      out.write("\tbackground: #fff\r\n");
      out.write("\t\turl(/site/dojo/dijit/themes/tundra/images/buttonEnabled.png) repeat-x\r\n");
      out.write("\t\tbottom left;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#gmapsnode {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;/* hide; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 400px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* .movablenode {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: scroll;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 400px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("} */\r\n");
      out.write("\r\n");
      out.write(".popupmenucls {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 2px solid black;\r\n");
      out.write("\toverflow: hidden;/* auto; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 400px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write(".anondefstaticnode,.staticnode,.movablenode{\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\toverflow: hidden;/* auto; */\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 400px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-box-shadow: 0px 3px 4px #000;\r\n");
      out.write("\t-webkit-box-shadow: 0px 3px 4px #000;\r\n");
      out.write("\tbox-shadow: 0px 3px 4px #000;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\t border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("/* .staticnode {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder: 3px solid silver;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 400px;\r\n");
      out.write("\tfilter: alpha(opacity =     80);\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write(" */\r\n");
      out.write(".simplestaticnode {\r\n");
      out.write("\tbackground: white;\r\n");
      out.write("\tborder: 1px solid gray;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 400px;\r\n");
      out.write("\tfilter: alpha(opacity =     100);\r\n");
      out.write("\topacity: 1;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".simplestaticnode2 {\r\n");
      out.write("\tbackground: white;\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\tleft: 800px;\r\n");
      out.write("\ttop: 400px;\r\n");
      out.write("\tfilter: alpha(opacity =     90);\r\n");
      out.write("\topacity: 0.9;\r\n");
      out.write("\t-moz-border-radius: 10px;\r\n");
      out.write("\t-webkit-border-radius: 10px;\r\n");
      out.write("\tbehavior: url(border-radius.htc);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\"><!--\r\n");
      out.write("\t\tvar artistMode=false;\r\n");
      out.write("        var lastkeyed=\"\";\t\t\r\n");
      out.write("        \r\n");
      out.write("        var wdgtsrc ;\r\n");
      out.write("        var lastkeyedAll = new Array();\r\n");
      out.write("\t\tvar currentGraph=null;\r\n");
      out.write("\t\tvar designMode=false;\r\n");
      out.write("\t\t");
String graph= request.getParameter("page") ;
		if(graph==null|| graph.length()<=0) {
		out.print("currentGraph=\"MyDesign1\";");
		}
		else {
			out.print( "currentGraph=\""+graph+"\";");
		}
		String designMode= request.getParameter("designMode") ;
		if(designMode==null|| designMode.length()<=0) {
		out.print("designMode=false;");
		}
		else {
			out.print( "designMode="+true+";");
		}
      out.write("\r\n");
      out.write("  \t  \t\t//dojo.require(\"dojo.query\");\r\n");
      out.write("  \t  \t\t//dojo.require(\"dojo.position\");\r\n");
      out.write("            dojo.require(\"dojox.layout.ResizeHandle\");\r\n");
      out.write("\t        dojo.require(\"dijit.MenuBar\");\r\n");
      out.write("\t        dojo.require(\"dijit.MenuBarItem\");\r\n");
      out.write("\t        dojo.require(\"dijit.PopupMenuBarItem\");\r\n");
      out.write("\t        dojo.require(\"dijit.Menu\");\r\n");
      out.write("\t        dojo.require(\"dijit.MenuItem\");\r\n");
      out.write("\t        dojo.require(\"dijit.PopupMenuItem\");\r\n");
      out.write("\t        dojo.require(\"dijit.layout.SplitContainer\");\r\n");
      out.write("\t        dojo.require(\"dijit.layout.ContentPane\");\r\n");
      out.write("\t        dojo.require(\"dijit.layout.AccordionContainer\");\r\n");
      out.write("\t        dojo.require(\"dijit.ColorPalette\");\r\n");
      out.write("\t        dojo.require(\"dijit.Dialog\");\r\n");
      out.write("\t        dojo.require(\"dijit.form.RadioButton\");\r\n");
      out.write("\t        dojo.require(\"dijit.form.ValidationTextBox\");\r\n");
      out.write("\t        dojo.require(\"dijit.form.NumberTextBox\");\r\n");
      out.write("\t        dojo.require(\"dijit.InlineEditBox\");\r\n");
      out.write("\t        dojo.require(\"dijit.form.HorizontalSlider\");\r\n");
      out.write("\t        dojo.require(\"dijit.form.HorizontalRule\");\r\n");
      out.write("\t        dojo.require(\"dijit.form.HorizontalRuleLabels\");\r\n");
      out.write("            dojo.require(\"dijit.Menu\");\r\n");
      out.write("            dojo.require(\"dojo.parser\");\r\n");
      out.write("            dojo.require(\"dojo.dnd.Mover\");\r\n");
      out.write("            dojo.require(\"dojo.dnd.Moveable\");\r\n");
      out.write("            dojo.require(\"dojo.dnd.move\");\r\n");
      out.write("            dojo.require(\"dojo.io.iframe\");\r\n");
      out.write("            dojo.require(\"dojo.dnd.Container\");\r\n");
      out.write("            dojo.require(\"dojo.dnd.Manager\");\r\n");
      out.write("            dojo.require(\"dojo.dnd.Source\");\r\n");
      out.write("            dojo.require(\"dojox.av.FLAudio\");\r\n");
      out.write("            dojo.require(\"dojo.data.ItemFileWriteStore\");\r\n");
      out.write("            dojo.require(\"dojo.data.ItemFileReadStore\");\r\n");
      out.write("            dojo.require(\"dijit.tree.ForestStoreModel\");\r\n");
      out.write("        \tdojo.require(\"dijit.Tree\");\r\n");
      out.write("        \tdojo.require(\"dijit.TooltipDialog\");\r\n");
      out.write("        \t  dojo.require(\"dijit.tree.dndSource\");\r\n");
      out.write("        \t  dojo.require(\"dojox.charting.Chart2D\");\r\n");
      out.write("        \t  dojo.require(\"dojox.charting.themes.Tom\");\r\n");
      out.write("/*         \t  dojo.require(\"dojox.charting.axis2d.Default\");\r\n");
      out.write("        \t  dojo.require(\"dojox.charting.plot2d.Default\");\r\n");
      out.write("        \t  dojo.require(\"dojox.charting.plot2d.Spider\");\r\n");
      out.write("        \t  dojo.require(\"dojox.charting.axis2d.Base\");\r\n");
      out.write(" */            \r\n");
      out.write(" \r\n");
      out.write("  \r\n");
      out.write(" dojo.require(\"dojox.widget.AnalogGauge\");\r\n");
      out.write("dojo.require(\"dojox.widget.gauge.AnalogArcIndicator\");\r\n");
      out.write("dojo.require(\"dojox.widget.gauge.AnalogNeedleIndicator\");\r\n");
      out.write("dojo.require(\"dojox.widget.gauge.AnalogArrowIndicator\");\r\n");
      out.write("\r\n");
      out.write(" dojo.addOnLoad(documentReady);\r\n");
      out.write("            var mySound;\r\n");
      out.write("            var repostore=null;\r\n");
      out.write("            var repomodel=null;\r\n");
      out.write("            var repotree=null;\r\n");
      out.write("            var response = [{\r\n");
      out.write("             module:\"Droppables\",\r\n");
      out.write("             name  :\"Droppables\",\r\n");
      out.write("             items:  [\r\n");
      out.write("             ");
List<String> lst = DBHelper.getInstance().getStringList("select name from staticcomponent order by id desc");
             int i = 0;
             Set<String> processed = new HashSet<String>();
            for(String s: lst){
            	if(processed.contains(s))continue;
            	 processed.add(s);
            	if(filterDroppables && !dropableFilter.contains(s)){
            	out.print("{ module: 'Droppables' ,name:\""+s+"\"}");
            	if(i<(lst.size()-1)){
            		out.println(",");
            	}
            	i++;
            	}
            }
      out.write("\r\n");
      out.write("              ]\r\n");
      out.write("            },\r\n");
      out.write("            {\r\n");
      out.write("                module:\"Processors Library\",\r\n");
      out.write("                name  :\"Processors Library\",\r\n");
      out.write("                items:  [\r\n");
      out.write("                ");
List<String> lst2 = DBHelper.getInstance().getStringList("select shortname from procinfos order by id desc");
                int i2 = 0;
               for(String s: lst2){
               	out.print("{ module: 'Processors Library' ,name:\""+s+"\"}");
               	if(i2<(lst2.size()-1))
               		out.println(",");
               	i2++;
               }
      out.write("\r\n");
      out.write("                 ]\r\n");
      out.write("               },\r\n");
      out.write("               {\r\n");
      out.write("                   module:\"Graphs Library\",\r\n");
      out.write("                   name  :\"Graphs Library\",\r\n");
      out.write("                   items:  [\r\n");
      out.write("                   ");
List<String> lst3 = DBHelper.getInstance().getStringList("select name from graphs");
                   int i3 = 0;
                  for(String s: lst3){
                  	out.print("{ module: 'Graphs Library' ,name:\"Graph:"+s+"\"}");
                  	if(i3<(lst3.size()-1))
                  		out.println(",");
                  	i3++;
                  }
      out.write("\r\n");
      out.write("                    ]\r\n");
      out.write("                  },{\r\n");
      out.write("                      module:\"Design Library\",\r\n");
      out.write("                      name  :\"Design Library\",\r\n");
      out.write("                      items:  [\r\n");
      out.write("                      ");
List<String> lstDesign = DBHelper.getInstance().getStringList("select name from pageconfig");
                      int lstDesignCount = 0;
                     for(String s: lstDesign){
                     	out.print("{ module: 'Design Library' ,name:\"Design:"+s+"\"}");
                     	if(lstDesignCount<(lstDesign.size()-1))
                     		out.println(",");
                     	lstDesignCount++;
                     }
      out.write("\r\n");
      out.write("                       ]\r\n");
      out.write("                     },{\r\n");
      out.write("                      module:\"Annotations\",\r\n");
      out.write("                      name  :\"Annotations\",\r\n");
      out.write("                      items:  [ \r\n");
      out.write("                      { module: 'Annotations' ,name:\"Annot:ScatterGather\"}/*shedule  parallel*/,\r\n");
      out.write("                      { module: 'Annotations' ,name:\"Annot:FinishFirst\"}/*deapth first*/,\r\n");
      out.write("                      { module: 'Annotations' ,name:\"Annot:JoinAll\"}/*Breadth first*/,\r\n");
      out.write("                      { module: 'Annotations' ,name:\"Annot:break\"}/*break statement*/,\r\n");
      out.write("                      { module: 'Annotations' ,name:\"Annot:AllAtOnce\"}/*Breadth first*/\r\n");
      out.write("                      ]\r\n");
      out.write("                     },{\r\n");
      out.write("                         module:\"TextAnnotations\",\r\n");
      out.write("                         name  :\"TextAnnotations\",\r\n");
      out.write("                         items:  [ \r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:int\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:date\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:decimal\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:alphaNum\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:phone\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:month\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:zipcode\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:alphaNumwithspace\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:vin\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:email\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:loc\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:url\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:poly\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:street\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:RecPos\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:IPAddress\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:HTTPCode\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:URI\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:HTTPVerb\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:streetloc\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:nchar\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:pattern\"},\r\n");
      out.write("                         { module: 'TextAnnotations' ,name:\"Annot:borough\"}\r\n");
      out.write("                         ]\r\n");
      out.write("                        },{\r\n");
      out.write("                            module:\"LangAnnotations\",\r\n");
      out.write("                            name  :\"LangAnnotations\",\r\n");
      out.write("                            items:  [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t{ module: 'LangAnnotations' ,name:\"Annot:name\"},\r\n");
      out.write("                                     { module: 'LangAnnotations' ,name:\"Annot:verb\"},\r\n");
      out.write("                                     { module: 'LangAnnotations' ,name:\"Annot:noun\"},\r\n");
      out.write("                                     { module: 'LangAnnotations' ,name:\"Annot:adjective\"},\r\n");
      out.write("                                     { module: 'LangAnnotations' ,name:\"Annot:subjacctive\"},\r\n");
      out.write("                                     { module: 'LangAnnotations' ,name:\"Annot:pronoun\"}\r\n");
      out.write("                            ]\r\n");
      out.write("                           },{\r\n");
      out.write("                               module:\"PointAnnotations\",\r\n");
      out.write("                               name  :\"PointAnnotations\",\r\n");
      out.write("                               items:  [\r\n");
      out.write("   \t\t\t\t\t\t\t\t\t{ module: 'LangAnnotations' ,name:\"Annot:action1\"},\r\n");
      out.write("   \t\t\t\t\t\t\t\t\t{ module: 'LangAnnotations' ,name:\"Annot:action2\"},\r\n");
      out.write("   \t\t\t\t\t\t\t\t\t{ module: 'LangAnnotations' ,name:\"Annot:action3\"},\r\n");
      out.write("   \t\t\t\t\t\t\t\t\t{ module: 'LangAnnotations' ,name:\"Annot:action4\"}\r\n");
      out.write("                               ]\r\n");
      out.write("                              },{\r\n");
      out.write("                module:\"Widgets\",\r\n");
      out.write("                name  :\"Widgets\",\r\n");
      out.write("                items:  [ \r\n");
      out.write("                { module: 'Widgets' ,name:\"Blinker\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Dimmer\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Light\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Green Bulb\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Red Bulb\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Flat Green Led\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Flat Red Led\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Flat Yellow Led\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Tag\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Continous Timer\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Onetime Timer\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"InputPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"OutputPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"AuxPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Port\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"PortMethod\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"ComplexPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"ComplexPortMethod\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"ComplexInputPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"ComplexOutputPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"ComplexAuxPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"ConvertToInputPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"ConvertToOutputPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"ConvertToAuxPort\"},\r\n");
      out.write("                { module: 'Widgets' ,name:\"Slider\"},\r\n");
      out.write("                ]\r\n");
      out.write("               },{\r\n");
      out.write("                   module:\"Code Blocks\",\r\n");
      out.write("                   name  :\"Code Blocks\",\r\n");
      out.write("                   items:  [ { module: 'Code Blocks' ,name:\"TitanClass\"},\r\n");
      out.write("                             { module: 'Code Blocks' ,name:\"TitanJob\"},\r\n");
      out.write("                             { module: 'Code Blocks' ,name:\"TitanAnalyzer\"},\r\n");
      out.write("                             { module: 'Code Blocks' ,name:\"TitanBlock\"},\r\n");
      out.write("                             { module: 'Code Blocks' ,name:\"AnonDefScript\"}\r\n");
      out.write("                            ]\r\n");
      out.write("               \r\n");
      out.write("                  },{\r\n");
      out.write("                      module:\"Custom Modules\",\r\n");
      out.write("                      name  :\"Custom Modules\",\r\n");
      out.write("                      items:  [ { module: 'Custom Modules' ,name:\"FetchUrlButton\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Button\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Link\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Module\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"SQLOutputMapping\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"SQLInputMapping\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Remap\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"ClassOutputMapping\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"ClassInputMapping\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"NewClassOutputMapping\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"NewClassInputMapping\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"NewClassPropMapping\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"StaticModule\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"AnonScriptModule\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"CanvasModule\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"SimpleStaticModule\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Image\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"TextArea\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Graphics\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Label\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Animation\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Input\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Action\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"EventAnimation\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"RawImage\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Code\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"HeaderModule\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"HeaderLabel\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Last\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Shape\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"CanvasImage\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Google Map\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Chart\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Chart 2 Dim\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"ProtoBuff\"},\r\n");
      out.write("                                { module: 'Custom Modules' ,name:\"Pie Chart\"}]\r\n");
      out.write("                  \r\n");
      out.write("                     },{\r\n");
      out.write("                    \t\r\n");
      out.write("                         module:\"Tasks\",\r\n");
      out.write("                         name  :\"Tasks\",\r\n");
      out.write("                         items:  [ \r\n");
      out.write("                                   ");
for(TaskSpec s: taskList){
									out.println("{ module: 'Tasks' ,name:'Task:"+s.getDispName()+"'},");
                                   }
      out.write("\r\n");
      out.write("                                  ]\r\n");
      out.write("                     \r\n");
      out.write("                        },{\r\n");
      out.write("                            module:\"Mapper Tasks\",\r\n");
      out.write("                            name  :\"Mapper Tasks\",\r\n");
      out.write("                            items:  [ \r\n");
      out.write("                                      ");
for(String s: mapperTaskList){
   									out.println("{ module: 'Mapper Tasks' ,name:'MTask:"+s+"'},");
                                      }
      out.write("\r\n");
      out.write("                                     ]\r\n");
      out.write("                        \r\n");
      out.write("                           }\r\n");
      out.write("                           ,{\r\n");
      out.write("                               module:\"WebUI Tasks\",\r\n");
      out.write("                               name  :\"WebUI Tasks\",\r\n");
      out.write("                               items:  [ \r\n");
      out.write("                                         ");
for(String s: webUITaskList){
      									out.println("{ module: 'WebUI Tasks' ,name:'WebUITask:"+s+"'},");
                                         }
      out.write("\r\n");
      out.write("                                        ]\r\n");
      out.write("                           \r\n");
      out.write("                              }");
for(Group grp:groupMenuList){
                        		out.println(",{");
                        		out.println("module:'"+grp.getId()+"',");
                        		out.println("name:'"+grp.getId()+"',");
                        		out.println("items:  [ ");
                        		for(String s: grp.getItems()){
   									out.println("{ module: '"+grp.getId()+"' ,name:'"+grp.getId()+":"+s+"'},");
                                     }
                        		out.println("] ");
                        		out.println("}");
                           }
      out.write("                           \r\n");
      out.write("                           ];\r\n");
      out.write("           \r\n");
      out.write("            var data = {\r\n");
      out.write("                    \"identifier\": \"name\",\r\n");
      out.write("                    \"label\": \"name\",\r\n");
      out.write("                    \"items\": response\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("            var enableSound = false;\r\n");
      out.write("            var stepMoverHline = null;\r\n");
      out.write("            var stepMoverVline = null;\r\n");
      out.write("            var stepMoverText = null;\r\n");
      out.write("            function recalcPos(id){\r\n");
      out.write("            \tvar comp = findComponentByName(id);\r\n");
      out.write("            \tvar gnode = findNodeById(id);\r\n");
      out.write("            \tvar pos = dojo.position(id);\r\n");
      out.write("            \tvar evtdata = {};\r\n");
      out.write("            \tevtdata.id = id;\r\n");
      out.write("            \tevtdata.type=\"ssmmovestop\";\r\n");
      out.write("            \tevtdata.pos = pos;\r\n");
      out.write("            \tsendEvent(geq, [evtdata]) ;\r\n");
      out.write("            \tif(comp!=null){\r\n");
      out.write("            \t\tcomp.width = pos.w;\r\n");
      out.write("            \t\tcomp.height = pos.h;\r\n");
      out.write("            \t}\r\n");
      out.write("            \tif(gnode!=null){\r\n");
      out.write("            \tdraw();\r\n");
      out.write("            \t}\r\n");
      out.write("            }\r\n");
      out.write("            dojo.declare(\"dojo.dnd.StepMover\", dojo.dnd.Mover, {\r\n");
      out.write("            \t  onMouseMove: function(e) {\r\n");
      out.write("            \t\t  if(stepMoverHline!=null){\r\n");
      out.write("            \t\t\t  try{\r\n");
      out.write("            \t\t\t  stepMoverHline.remove();\r\n");
      out.write("            \t\t\t  }catch(e){}\r\n");
      out.write("            \t\t\t  stepMoverHline = null;\r\n");
      out.write("            \t\t  }\r\n");
      out.write("            \t\t  if(stepMoverVline!=null){\r\n");
      out.write("            \t\t\t  try{\r\n");
      out.write("            \t\t\t\t  stepMoverVline.remove();\r\n");
      out.write("            \t\t\t  }catch(e){}\r\n");
      out.write("            \t\t\t  stepMoverVline = null;\r\n");
      out.write("            \t\t  }\r\n");
      out.write("            \t\t  if(stepMoverText!=null){\r\n");
      out.write("            \t\t\t  try{\r\n");
      out.write("            \t\t\t\t  stepMoverText.remove();\r\n");
      out.write("            \t\t\t  }catch(e){}\r\n");
      out.write("            \t\t\t  stepMoverText = null;\r\n");
      out.write("            \t\t  }            \t\t  \r\n");
      out.write("            \t    dojo.dnd.autoScroll(e);\r\n");
      out.write("            \t    var srcEle = e.srcElement==null ?e.target:e.srcElement;\r\n");
      out.write("            \t    var id = null;\r\n");
      out.write("            \t    if(srcEle!=null && (undefined != srcEle)){\r\n");
      out.write("            \t    \tid = srcEle.id;\r\n");
      out.write("            \t  }\r\n");
      out.write("            \t    var m = this.marginBox;\r\n");
      out.write("            \t    var stepSize = parseInt(wideconfig.stepMoverSize);\r\n");
      out.write("            \t    var shp = null;\r\n");
      out.write("            \t    if(e.ctrlKey) {\r\n");
      out.write("            \t    \tshp =  {l: parseInt((m.l + e.pageX) /stepSize) *stepSize, t: parseInt((m.t + e.pageY) / stepSize) * stepSize};\r\n");
      out.write("            \t      this.host.onMove(this,shp );\r\n");
      out.write("            \t    } else {\r\n");
      out.write("            \t    \tshp = {l: m.l + e.pageX, t: m.t + e.pageY};\r\n");
      out.write("            \t      this.host.onMove(this, shp);\r\n");
      out.write("            \t    }\r\n");
      out.write("            \t    if(wideconfig.cross_hair!=null && wideconfig.cross_hair==\"true\"){\r\n");
      out.write("            \t    if(id!=null){\r\n");
      out.write("            \t    \tvar mid =id;\r\n");
      out.write("            \t    \tvar comp = null;\r\n");
      out.write("        \t    \t\tif(id.length>\"heading_\".length)\r\n");
      out.write("        \t    \t\t\tmid = id.substring(\"heading_\".length);\r\n");
      out.write("            \t    \t\tcomp = findComponentByName(mid);\r\n");
      out.write("            \t    \tif(comp==null){\r\n");
      out.write("            \t    \t\tcomp = findComponentByName(id);\r\n");
      out.write("            \t    \t}\r\n");
      out.write("            \t    \tif(comp!=null && undefined!=comp){\r\n");
      out.write("            \t    \tvar grpPos = dojo.position(mid);\r\n");
      out.write("            \t    \tvar smx = grpPos.x-leftWidth;\r\n");
      out.write("            \t    \tvar smy  = grpPos.y-topWidth ;\r\n");
      out.write("            \t    \tsmx = parseInt(smx);\r\n");
      out.write("            \t    \tsmy = parseInt(smy);\r\n");
      out.write("            \t    \tstepMoverHline = hline(0,smy,\"black\");\r\n");
      out.write("            \t    \tstepMoverVline = vline(smx,0,\"black\");\r\n");
      out.write("            \t    \tstepMoverText = pCanvas.text(smx,smy-10,\"(\"+smx+\",\"+smy+\")\")\r\n");
      out.write("            \t    \t}\r\n");
      out.write("            \t    }\r\n");
      out.write("            \t    }\r\n");
      out.write("            \t    dojo.stopEvent(e);\r\n");
      out.write("            \t    \r\n");
      out.write("            \t  }\r\n");
      out.write("            \t});\r\n");
      out.write("function documentReady(){\r\n");
      out.write("\t");

	String wconfig = request.getParameter("wconfig"); 
		if(wconfig!=null){
			out.print("wideconfigtoUse=\""+wconfig+"\";");
		}
	
      out.write("\r\n");
      out.write("    getWideConfig(wideconfigtoUse);\r\n");
      out.write("    repostore = new dojo.data.ItemFileWriteStore({data: data});\r\n");
      out.write("    console.log(repostore);\r\n");
      out.write("\tif(enableSound){\r\n");
      out.write("\tmySound = new dojox.av.FLAudio({\r\n");
      out.write("        initialVolume: .5,\r\n");
      out.write("        autoPlay: false,\r\n");
      out.write("        isDebug: false,\r\n");
      out.write("        statusInterval: 500\r\n");
      out.write("    });\r\n");
      out.write("\t}\r\n");
      out.write("\tpropm = new dojo.dnd.Moveable(\"propnode\",{handle:\"propnodeheader\" });\r\n");
      out.write("    docm = new dojo.dnd.Moveable(\"docnode\",{handle:\"docnodeheader\" });\r\n");
      out.write("    var cmdm = new dojo.dnd.Moveable(\"cmdnode\",{handle:\"cmdnodeheader\"});\r\n");
      out.write("    var histm = new dojo.dnd.Moveable(\"histnode\",{handle:\"histnodeheader\"});\r\n");
      out.write("\t\r\n");
      out.write("    loadImageIcons();\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("//prepareGraph();\r\n");
      out.write("startModuleConnListener();\r\n");
      out.write("GetProcesses();\r\n");
      out.write("GetUpdateProcesses();\r\n");
      out.write("/*added to support dynamic modules\r\n");
      out.write(" * \r\n");
      out.write(" */\r\n");
      out.write(" if(dynaMod){\r\n");
      out.write("\tgetModulesFor(\"wide\",prepareGraph);\r\n");
      out.write(" }\r\n");
      out.write("hidediv('cmdnode');hidediv('docnode');hidediv('propnode');hidediv('histnode');dw=false;hw=false;pw=false;cw=false;\r\n");
      out.write("dojo.subscribe(ceq, null, function handle(jdata){\r\n");
      out.write("  var str = jdata.label;\r\n");
      out.write("  \tconsole.log(str);\r\n");
      out.write("\tif(menuitems[str]!=null){\r\n");
      out.write("\t\tmenuitems[str](jdata);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("dojo.subscribe(\"/dojo/resize/stop\", function(inst){\r\n");
      out.write("\tconsole.log(\"resized: \"+inst.targetDomNode.id);\r\n");
      out.write("\t\tvar a = editors[inst.targetDomNode.id]\r\n");
      out.write("\t\t\tif(a!=null){\r\n");
      out.write("\t\t\t\t/*var pos = dojo.position(inst.targetDomNode);\r\n");
      out.write("\t\t\t\tvar b = dojo.byId(\"textarea_\"+inst.targetDomNode.id);\r\n");
      out.write("\t\t\t\tb.style.width = (pos.w-40)+\"px\";\r\n");
      out.write("\t\t\t\tb.style.height = (pos.h-44)+\"px\";\r\n");
      out.write("\t\t\t\ta.resize();*/\r\n");
      out.write("\t\t\t\tvar fun = (new Function(\"fixEditor('\"+inst.targetDomNode.id+\"')\"));\r\n");
      out.write("\t\t\t\tsetTimeout(fun,300);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t   var a=maps[inst.targetDomNode.id];\r\n");
      out.write("\t   if(a!=null){\r\n");
      out.write("\t\t   google.maps.event.trigger(a, \"resize\");\r\n");
      out.write("\t   }\r\n");
      out.write("\t  \r\n");
      out.write("\t   var a=globals[inst.targetDomNode.id];\r\n");
      out.write("\t   if(a!=null){\r\n");
      out.write("\t\t   a.resize(inst.targetDomNode.offsetWidth,inst.targetDomNode.offsetHeight,inst.targetDomNode.id);\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t   \r\n");
      out.write("\t   var a=grids[inst.targetDomNode.id];\r\n");
      out.write("\t   if(a!=null){\r\n");
      out.write("\t\t   a.resize();\r\n");
      out.write("\t\t   a.update();\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t   var fun = (new Function(\"recalcPos(\\'\"+inst.targetDomNode.id+\"\\');\"));\r\n");
      out.write("\t\t\tsetTimeout(fun,200);\r\n");
      out.write("\r\n");
      out.write("\t\tvar a = canvasModules[inst.targetDomNode.id];\r\n");
      out.write("\t\tif(a!=null){\r\n");
      out.write("\t\t\t  var fun = (new Function(\"resizeCanvas(\\'\"+inst.targetDomNode.id+\"\\');\"));\r\n");
      out.write("\t\t\t  setTimeout(fun,300);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("dojo.connect(document, \"onkeyup\", function(e){\r\n");
      out.write("\tswitch(e.keyCode){\r\n");
      out.write("\t\tcase dojo.keys.CTRL:\r\n");
      out.write("   \t\t\tctrl = false;\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\tcase dojo.keys.ALT:\r\n");
      out.write("   \t\t\talt = false;\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\tcase dojo.keys.SHIFT:\r\n");
      out.write("   \t\t\tshift = false;\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\tcase dojo.keys.DELETE:\r\n");
      out.write("   \t\t\tremoveLastSelectedNode();\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("});\r\n");
      out.write("dojo.connect(document, \"onkeydown\", function(e){\r\n");
      out.write("\tswitch(e.keyCode){\r\n");
      out.write("\t\tcase dojo.keys.CTRL:\r\n");
      out.write("   \t\t\tctrl = true;\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\tcase dojo.keys.ALT:\r\n");
      out.write("   \t\t\talt = true;\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\tcase dojo.keys.SHIFT:\r\n");
      out.write("   \t\t\tshift = true;\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\t}\r\n");
      out.write("});\r\n");
      out.write("dojo.connect(document, \"onkeypress\", function(e){\r\n");
      out.write("    switch(e.charOrCode){\r\n");
      out.write("       case \r\n");
      out.write("       dojo.keys.ENTER :\r\n");
      out.write("       \tconsole.log(lastkeyed);\r\n");
      out.write("    \tlastkeyedAll.push(lastkeyed);\r\n");
      out.write("    \thandleCommand();\r\n");
      out.write("    \tlastkeyed=\"\";   \r\n");
      out.write("        break;\r\n");
      out.write("   \r\n");
      out.write("       default: \r\n");
      out.write("       \t//console.log('you typed: ', e.charOrCode);\r\n");
      out.write("    \tlastkeyed+=e.charOrCode;\r\n");
      out.write("    \tlastkeyedAll.push(lastkeyed);\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("initPluginJS();\r\n");
      out.write("var propm = new dojo.dnd.Moveable(\"Widgets\",{handle:'ndtype2'});\r\n");
      out.write("registerWindow(\"Widgets\");\r\n");
      out.write("hideWindow(\"Widgets\");\r\n");
      out.write("var startDropId = null;\r\n");
      out.write("wdgtsrc = new dojo.dnd.Source(\"wdgts\",{copyOnly:true,handle:'ndtype'});\r\n");
      out.write("dojo.subscribe(\"/dnd/cancel\", function(source){\r\n");
      out.write("    console.debug(\"cancled the drop\", source);\r\n");
      out.write("\tvar ele = getElementFromPos(realMouseX,realMouseY);\r\n");
      out.write("\tconsole.log(ele);\r\n");
      out.write("\tvar dropId=startDropId;\r\n");
      out.write("\t var isTree = false;\r\n");
      out.write("     if(dropId.indexOf(\"dijit__TreeNode\")==0){\r\n");
      out.write("   \t  isTree = true;\r\n");
      out.write("   \t  dropId=dropId.substring(0,dropId.length-4);\r\n");
      out.write("   \t  var nd = dijit.byId(dropId);\r\n");
      out.write("   \t  dropId=nd.item.name;\r\n");
      out.write("   \t  console.log(\"dropped tree: \"+nd.item.name+\"   ,drop id:\"+dropId);\r\n");
      out.write("     }\r\n");
      out.write("     var cx = mouseX,cy = mouseY;\r\n");
      out.write("     var a = findSelectedNode(cx,cy);\r\n");
      out.write("     console.log(\"Dropped on :\");\r\n");
      out.write("     console.log(a);\r\n");
      out.write("     if(undefined == dropId || dropId ==null) \r\n");
      out.write("    \t return;\r\n");
      out.write("     if(!( typeof dropId === 'string' )) {\r\n");
      out.write("         dropId = dropId[ 0];\r\n");
      out.write(" \t }\r\n");
      out.write("     var compname = dropId;\r\n");
      out.write("     var component = findComponentByName(a.id);\r\n");
      out.write("     if(a.type==\"module\"){\r\n");
      out.write("  \t\t  if(dropId.indexOf(\":\")>-1){\r\n");
      out.write("     \t\t\tvar parts = dropId.split(\":\");\r\n");
      out.write("     \t\t\tcompname = parts[1].trim();\r\n");
      out.write("  \t\t  }\r\n");
      out.write("    \t if(a.tags==null){\r\n");
      out.write("\t\t\t\ta.tags = new Array();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("    \t a.tags.push(compname);\r\n");
      out.write("    \t if(component!=null){\r\n");
      out.write("    \t\t if(component.tags==null){\r\n");
      out.write("    \t\t\t component.tags = new Array();\r\n");
      out.write(" \t\t\t}\r\n");
      out.write("    \t\t component.tags.push(compname);\r\n");
      out.write("    \t }\r\n");
      out.write("    \t \r\n");
      out.write("     }\r\n");
      out.write("\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  dojo.subscribe(\"/dnd/start\", function(source, nodes, copy){\r\n");
      out.write("    console.debug(\"Starting the drop\", source);\r\n");
      out.write("    startDropId = nodes[0].id==null?nodes[0].innerHTML:nodes[0].id;\r\n");
      out.write("    console.log(\"dnd  start: \"+  startDropId);\r\n");
      out.write("    \r\n");
      out.write("  });\r\n");
      out.write("  dojo.subscribe(\"/dnd/drop/before\", function(source, nodes, copy, target){\r\n");
      out.write("\t  startDropId = null;//donot forget to nullify!!\r\n");
      out.write("\t  var dropId = nodes[0].id==null?nodes[0].innerHTML:nodes[0].id;\r\n");
      out.write("\t console.log(\"dnd  before: \"+  dropId);\r\n");
      out.write("    if(target == c1){\r\n");
      out.write("      console.debug(copy ? \"Copying from\" : \"Moving from\", source, \"to\", target, \"before\", target.before);\r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("  dojo.subscribe(\"/dnd/drop\", function(source, nodes, copy, target){\r\n");
      out.write("    if(target == c1)\r\n");
      out.write("    {\r\n");
      out.write("      console.debug(copy ? \"Copying from\" : \"Moving from\", source, \"to\", target, \"before\", target.before);\r\n");
      out.write("      var dropId = nodes[0].id==null?nodes[0].innerHTML:nodes[0].id;\r\n");
      out.write("      console.info(\"Dropped: \"+dropId);\r\n");
      out.write("      var isTree = false;\r\n");
      out.write("      if(dropId.indexOf(\"dijit__TreeNode\")==0){\r\n");
      out.write("    \t  isTree = true;\r\n");
      out.write("    \t  dropId=dropId.substring(0,dropId.length-4);\r\n");
      out.write("    \t  var nd = dijit.byId(dropId);\r\n");
      out.write("    \t  dropId=nd.item.name;\r\n");
      out.write("    \t  console.log(\"dropped tree: \"+nd.item.name+\"   ,drop id:\"+dropId);\r\n");
      out.write("      }\r\n");
      out.write("      var cx = mouseX,cy = mouseY;\r\n");
      out.write("      var a = findSelectedNode(cx,cy);\r\n");
      out.write("      console.log(\"Dropped on :\"+a);\r\n");
      out.write("      if(a==null){\r\n");
      out.write("    \t  if(mouseOverConn!=null){\r\n");
      out.write("    \t\t  a = mouseOverConn;\r\n");
      out.write("    \t  }\r\n");
      out.write("      }\r\n");
      out.write("      if(a!=null){\r\n");
      out.write("      console.info(\"DroppedOntopon: \"+a.id);\r\n");
      out.write("      }\r\n");
      out.write("      var f = comps[dropId];\r\n");
      out.write("      if(f==null && isTree==false){\r\n");
      out.write("    \t  dropId = nodes[0].innerHTML\r\n");
      out.write("    \t  f = comps[dropId];\r\n");
      out.write("      }\r\n");
      out.write("      if(undefined == dropId || dropId ==null) \r\n");
      out.write("          return;\r\n");
      out.write("\r\n");
      out.write("     if(!( typeof dropId === 'string' )) {\r\n");
      out.write("        dropId = dropId[ 0];\r\n");
      out.write("\t }\r\n");
      out.write(" \r\n");
      out.write("     if(a!=null && a.type!=null&&a.type==\"group\"){\r\n");
      out.write("    \t if(a.items==null){\r\n");
      out.write("    \t\t a.items = new Array();\r\n");
      out.write("    \t }\r\n");
      out.write("    \t if(dropId.indexOf(\"noteitem\")>0){\r\n");
      out.write("    \t var regex = new RegExp(/<([^\\s]+).*?id=\"([^\"]*?)\".*?>(.+?)<\\/\\1>/gi);\r\n");
      out.write("    \tvar  matches = dropId.match(regex);\r\n");
      out.write("    \t var results = new Array();\r\n");
      out.write("    \t for (var i=0;i<matches.length;i++) {\r\n");
      out.write("    \t     parts = regex.exec(matches[i]);\r\n");
      out.write("    \t     results.push(parts[2]);\r\n");
      out.write("    \t }\r\n");
      out.write("    \t for(var i=0;i<results.length;i++){\r\n");
      out.write("    \t\t a.items.push(results[i]);\r\n");
      out.write("    \t\t  var nf = \"/site/notesapi?t=antf&f=\"+a.folderId+\"&n=\"+results[i];\r\n");
      out.write("    \t\t     var str = doGetHtmlSync(nf);\r\n");
      out.write("    \t\t     addInfoToBox(str);\r\n");
      out.write("    \t }\r\n");
      out.write("    \t }\r\n");
      out.write("    \t else{\r\n");
      out.write("    \t a.items.push(dropId);\r\n");
      out.write("        }\r\n");
      out.write("    \t \r\n");
      out.write("     }else{\r\n");
      out.write("   \t    var configFun = configs[dropId];\r\n");
      out.write("    \t  if(configFun!=null){\r\n");
      out.write("\t\t\tconfigFun(f,a,dropId,true,cx,cy,null);//true mean commin via ui\r\n");
      out.write("       \t  }else{\r\n");
      out.write("       \t\t//sumit://adding a short way of adding drop handlers originial method now works bad with tree and autogenerated items!!\r\n");
      out.write("       \t\tvar func = null;\r\n");
      out.write("       \t\tvar partIDX = 0 ;\r\n");
      out.write("       \t\tvar nameIDX = 1 ;\r\n");
      out.write("       \t\t  if(dropId.indexOf(\":\")>-1){\r\n");
      out.write("       \t\t\tvar parts = dropId.split(\":\");\r\n");
      out.write("       \t\t\tpartIDX = parts.length-2;\r\n");
      out.write("       \t\t\tnameIDX = partIDX+1;\r\n");
      out.write("       \t\t\tvar fcode  = \"handle\"+parts[partIDX]+\"Drop\"\r\n");
      out.write("       \t\t\tfunc = comps[fcode];\r\n");
      out.write("       \t\t  }else{\r\n");
      out.write("       \t\t\tfunc = comps[dropId];\r\n");
      out.write("       \t\t  }\r\n");
      out.write("       \t\t\tif(func!=null){\r\n");
      out.write("       \t\t\t\tfunc(f,a,parts[nameIDX],true,cx,cy,null);//true mean commin via ui that case last parm is null(no exisiting config)'\r\n");
      out.write("       \t\t\t}\r\n");
      out.write("       \t\t\t\r\n");
      out.write("       \t\t  \r\n");
      out.write("       \t  }\r\n");
      out.write("\t   }\r\n");
      out.write("  }else {\r\n");
      out.write("    \t console.debug(copy ? \"Copying from\" : \"Moving from\", source.node.id, \"to\", target.node.id);\r\n");
      out.write("         console.info(\"Dropped: \"+nodes[0]);\r\n");
      out.write("         var dropId = nodes[0].id==null?nodes[0].innerHTML:nodes[0].id;\r\n");
      out.write("         console.info(\"Dropid: \"+dropId);\r\n");
      out.write("         if(dropId.indexOf(\"dijit__TreeNode\")==0){\r\n");
      out.write("       \t  dropId=dropId.substring(0,dropId.length-4);\r\n");
      out.write("       \t  var nd = dijit.byId(dropId);\r\n");
      out.write("   \t  \t  dropId=nd.item.name;\r\n");
      out.write("       \t  console.log(\"dropped tree: \"+dropId);\r\n");
      out.write("         }\r\n");
      out.write("         lastDropModule = target.node.id;\r\n");
      out.write("         lastDropModuleGrp = target.node.getAttribute(\"grpid\");\r\n");
      out.write("\t   }\r\n");
      out.write("  });\r\n");
      out.write("}\r\n");
      out.write("function getKeyed(){\r\n");
      out.write("return lastkeyed;\r\n");
      out.write("}\r\n");
      out.write("function getKeyedAll(){\r\n");
      out.write("return lastkeyedAll;\r\n");
      out.write("}\r\n");
      out.write("function resetKeyed(){\r\n");
      out.write("lastkeyed = \"\";\r\n");
      out.write("}\r\n");
      out.write("function getAndResetKeyed(){\r\n");
      out.write("var temp= lastkeyed;\r\n");
      out.write("lastkeyed=\"\";\r\n");
      out.write("return temp.length>0?temp:null;\r\n");
      out.write("}\r\n");
      out.write("function resetKeyedAll(){\r\n");
      out.write("lastkeyedAll = new Array();\r\n");
      out.write("}\r\n");
      out.write("function getAndResetKeyedAll(){\r\n");
      out.write("lastkeyedAll.push(lastkeyed);\r\n");
      out.write("lastkeyed=\"\";\r\n");
      out.write("var temp = lastkeyedAll;\r\n");
      out.write("lastkeyedAll = new Array();\r\n");
      out.write("return temp;\r\n");
      out.write("}\r\n");
      out.write(" function handleCommand(){\r\n");
      out.write("\t var cmd = dojo.trim(lastkeyed);\r\n");
      out.write("        {\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar parts = cmd.split(\" \");\r\n");
      out.write("\t\t\t\tcmd = parts[0];\r\n");
      out.write("\t\t\t\tconsole.log(parts);\r\n");
      out.write("\t\t\t\tconsole.log(cmd);\r\n");
      out.write("\t\t\t\tif(cmd==\"!cn\"){\r\n");
      out.write("\t\t\t\t\tcreateNewNodeDialog(300,300,40,40);\r\n");
      out.write("\t\t\t\t\t\tdojo.byId(\"nodeId\").value = parts[1];\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!cs\"){\r\n");
      out.write("\t\t\t\tcreateStreamDialogAtXYID(300,300,\"\");\r\n");
      out.write("\t\t\t\tdojo.byId(\"streamname\").value = parts[1];\r\n");
      out.write("\t\t\t\tdojo.byId(\"streamprocessor\").value = parts[2];\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!cc\"){\r\n");
      out.write("\t\t\t\tcreateConnectionDialogAtXYID(300,300,\"\");\r\n");
      out.write("\t\t\t\tdojo.byId(\"connectionId\").value = parts[1];\r\n");
      out.write("\t\t\t\tdojo.byId(\"fromNode\").value = parts[2];\r\n");
      out.write("\t\t\t\tdojo.byId(\"toNode\").value = parts[3];\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!cnote\"){\r\n");
      out.write("\t\t\t\tshowNoteDlg();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!ce\"){\r\n");
      out.write("\t\t\t\tcreateEventDialogAtXYID(300,300,\"\");\r\n");
      out.write("\t\t\t\t\tdojo.byId(\"eventname\").value = parts[1];\r\n");
      out.write("\t\t\t\tdojo.byId(\"eventstore\").value = parts[2];\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!sg\"){\r\n");
      out.write("\t\t\t\tsaveGraph();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!cg\"){\r\n");
      out.write("\t\t\t\tCompileProcess();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!ng\"){\r\n");
      out.write("\t\t\t\tclearGraph();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!og\"){\r\n");
      out.write("\t\t\t\topenGraph();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!redraw\"){\r\n");
      out.write("\t\t\t\tdraw();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!sh\"){\r\n");
      out.write("\t\t\t\tshowHistorical();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd==\"!cps\"){\r\n");
      out.write("\t\t\t\tvalidateProcess();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(cmd ==\"!mv\"){\r\n");
      out.write("\t\t\t\t\tvar vid = parts[1];\r\n");
      out.write("\t\t\t\t\tvar dx = parts[2];\r\n");
      out.write("\t\t\t\t\tvar dy = parts[3];\r\n");
      out.write("\t\t\t\t\tvar nd = findNodeById(vid);\r\n");
      out.write("\t\t\t\t\tnd.normalizedy = parseInt(nd.normalizedy) +parseInt(dy);\r\n");
      out.write("\t\t\t\t\tnd.normalizedx = parseInt(nd.normalizedx) +parseInt(dx);\r\n");
      out.write(" \t\t\t\t\tnd.x= parseInt(nd.x)+parseInt(dx);\r\n");
      out.write("\t\t\t\t\tnd.y=parseInt(nd.y)+parseInt(dy);\r\n");
      out.write("\t\t\t\t\tdraw();\r\n");
      out.write("       \t\t}\r\n");
      out.write("       \t\tif(cmd==\"!ep\"){\r\n");
      out.write("       \t\tvar vid = parts[1];\r\n");
      out.write("       \t\t createEventDialogAtXYID(300,300,vid);\r\n");
      out.write("       \t\t}\r\n");
      out.write("       \t\tif(cmd==\"!sp\"){\r\n");
      out.write("       \t\tvar vid = parts[1];\r\n");
      out.write("       \t\t addStreamPropertyDialogAtXYID(300,300,vid);\r\n");
      out.write("       \t\t}\r\n");
      out.write("       \t\tif(cmd==\"!cmenu\"){\r\n");
      out.write("       \t\tmycustommenu();\r\n");
      out.write("       \t\t}\r\n");
      out.write("       \t\tif(cmd==\"!ss\"){\r\n");
      out.write("       \t\tvar vid = parts[1];\r\n");
      out.write("       \t\tvar obj = findNodeById(vid);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("       \t\tvar objstr = dojo.toJson(obj);\r\n");
      out.write("            CallWebService(\"SaveStream\",objstr);\r\n");
      out.write("       \t\t}\r\n");
      out.write("       \t\t if(cmd==\"!sn\"){\r\n");
      out.write("       \t\t var vid = parts[1];\r\n");
      out.write("       \t\t var obj = findNodeById(vid);\r\n");
      out.write("       \t\t var objstr = dojo.toJson(obj);\r\n");
      out.write("            CallWebService(\"SaveNode\",objstr);\r\n");
      out.write("       \t\t}\r\n");
      out.write("       \t\tif(cmd==\"!dn\"){\r\n");
      out.write("       \t\t var vid = parts[1];\r\n");
      out.write("       \t\tremoveNodeById(vid);\r\n");
      out.write("       \t\tdraw();\r\n");
      out.write("       \t\t}\r\n");
      out.write("       \t\tif(cmd==\"!ds\"){\r\n");
      out.write("       \t\t var vid = parts[1];\r\n");
      out.write("       \t\tremoveNodeById(vid);\r\n");
      out.write("       \t\tdraw();\r\n");
      out.write("       \t\t}\r\n");
      out.write("       \t\t\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write(" /*addRepoLibItem([{'name':'abc','module':'module'}]);*/\r\n");
      out.write(" function addRepoLibItem(data){\r\n");
      out.write("\t var addedItems = new Array();\r\n");
      out.write("\t var module = \"\";\r\n");
      out.write("\t for(var i=0;i<data.length;i++){\r\n");
      out.write("\t\t var item = repostore.newItem({\"name\":data[i].name,\"module\":data[i].module});\r\n");
      out.write("\t\t addedItems.push(item);\r\n");
      out.write("\t\t repostore.save();\r\n");
      out.write("\t\t module= data[i].module\r\n");
      out.write("\t }\r\n");
      out.write("\t var item = repostore.newItem({\"name\":module,\"module\":module,items:addedItems});\r\n");
      out.write("\t repostore.save();\r\n");
      out.write("\t \r\n");
      out.write(" }\r\n");
      out.write("\t \r\n");
      out.write(" \t\t--></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"tundra body\" id=\"bodyelem\">\r\n");
      out.write("<div id=\"top\">\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"createNodeDialog\"\r\n");
      out.write("\t\ttitle=\"Create New Node\"\r\n");
      out.write("\t\texecute=\"createNode(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"nodeId\">Id: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"nodeId\" id=\"nodeId\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : node1</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"xCoordinate\" id=\"xCoordinate\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"yCoordinate\" id=\"yCoordinate\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"rWidth\" id=\"rWidth\"\r\n");
      out.write("\t\t\t\t\tconstraints=\"{min:0}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"bHeight\" id=\"bHeight\"\r\n");
      out.write("\t\t\t\t\tconstraints=\"{min:0}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"processclz\">ProcessClass</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"org.ptg.processors.EventProcessor\"\r\n");
      out.write("\t\t\t\t\tname=\"processclz\" id=\"processclz\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"processquery\">Query:</label></td>\r\n");
      out.write("\t\t\t\t<td><textarea\r\n");
      out.write("\t\t\t\t\t\tstyle=\"border-color: yellow; width: 100%; height: 100%;\"\r\n");
      out.write("\t\t\t\t\t\tname=\"processquery\" id=\"processquery\">select e as evt from Event e;</textarea>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Create</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- Update Node Dialog -->\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"updateNodeDialog\" title=\"Update Node\"\r\n");
      out.write("\t\texecute=\"updateNode(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_nodeId\">Id: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"u_nodeId\" id=\"u_nodeId\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"u_xCoordinate\"\r\n");
      out.write("\t\t\t\t\tid=\"u_xCoordinate\" required=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"u_yCoordinate\"\r\n");
      out.write("\t\t\t\t\tid=\"u_yCoordinate\" required=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"u_rWidth\" id=\"u_rWidth\"\r\n");
      out.write("\t\t\t\t\tconstraints=\"{min:0}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"u_bHeight\" id=\"u_bHeight\"\r\n");
      out.write("\t\t\t\t\tconstraints=\"{min:0}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_processclz\">ProcessClass</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"org.ptg.processors.EventProcessor\"\r\n");
      out.write("\t\t\t\t\tname=\"u_processclz\" id=\"u_processclz\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_processQuery\">Query:</label></td>\r\n");
      out.write("\t\t\t\t<td><textarea\r\n");
      out.write("\t\t\t\t\t\tstyle=\"border-color: yellow; width: 100%; height: 100%;\"\r\n");
      out.write("\t\t\t\t\t\tname=\"u_processquery\" id=\"u_processquery\">select e as evt from Event e;</textarea>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Update Node</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- End Update Node Dialog -->\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"createStreamDialog\"\r\n");
      out.write("\t\ttitle=\"Create New Stream\"\r\n");
      out.write("\t\texecute=\"createStream(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"streamname\">Name:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"streamname\" id=\"streamname\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : TestStream</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"streameventtype\">EventType:</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"TestEvent\" name=\"streameventtype\"\r\n");
      out.write("\t\t\t\t\tid=\"streameventtype\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"streamprocessor\">Processor:</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"TestEventProcessor\" name=\"streamprocessor\"\r\n");
      out.write("\t\t\t\t\tid=\"streamprocessor\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"streamextra\">Extra: </label></td>\r\n");
      out.write("\t\t\t\t<td><textarea\r\n");
      out.write("\t\t\t\t\t\tstyle=\"border-color: yellow; width: 100%; height: 100%;\"\r\n");
      out.write("\t\t\t\t\t\tname=\"streamextra\" id=\"streamextra\"></textarea></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"exceptionstream\">Exception Stream: </label></td>\r\n");
      out.write("\t\t\t\t<td><textarea\r\n");
      out.write("\t\t\t\t\t\tstyle=\"border-color: yellow; width: 100%; height: 100%;\"\r\n");
      out.write("\t\t\t\t\t\tname=\"exceptionstream\" id=\"exceptionstream\"></textarea></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"streamx\" id=\"streamx\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"streamy\" id=\"streamy\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Create</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- Update Stream Dialog -->\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"updateStreamDialog\"\r\n");
      out.write("\t\ttitle=\"Modify Stream\"\r\n");
      out.write("\t\texecute=\"updateStream(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_streamname\">Name:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"u_streamname\" id=\"u_streamname\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_streameventtype\">EventType:</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"TestEvent\" name=\"u_streameventtype\"\r\n");
      out.write("\t\t\t\t\tid=\"u_streameventtype\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_streamprocessor\">Processor:</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"TestEventProcessor\" name=\"u_streamprocessor\"\r\n");
      out.write("\t\t\t\t\tid=\"u_streamprocessor\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_streamextra\">Extra: </label></td>\r\n");
      out.write("\t\t\t\t<td><textarea\r\n");
      out.write("\t\t\t\t\t\tstyle=\"border-color: yellow; width: 100%; height: 100%;\"\r\n");
      out.write("\t\t\t\t\t\tname=\"u_streamextra\" id=\"u_streamextra\"></textarea></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_exceptionstream\">Exception Stream: </label></td>\r\n");
      out.write("\t\t\t\t<td><textarea\r\n");
      out.write("\t\t\t\t\t\tstyle=\"border-color: yellow; width: 100%; height: 100%;\"\r\n");
      out.write("\t\t\t\t\t\tname=\"u_exceptionstream\" id=\"u_exceptionstream\"></textarea></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"u_streamx\" id=\"u_streamx\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"u_streamy\" id=\"u_streamy\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Update Stream</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- End update Stream Dialog -->\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"createEventDialog\"\r\n");
      out.write("\t\ttitle=\"Create New Event\"\r\n");
      out.write("\t\texecute=\"createEvent(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"eventname\">Name:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"eventname\" id=\"eventname\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : TestEvent</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"eventstore\">EventStore: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"eventstore\" id=\"eventstore\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"eventx\" id=\"eventx\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"eventy\" id=\"eventy\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Create</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"createRouteDialog\"\r\n");
      out.write("\t\ttitle=\"Create New Route\"\r\n");
      out.write("\t\texecute=\"createRoute(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"routename\">Name:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"routename\" id=\"routename\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : TestRoute</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"routedesc\">Description: </label></td>\r\n");
      out.write("\t\t\t\t<td><textarea\r\n");
      out.write("\t\t\t\t\t\tstyle=\"border-color: yellow; width: 100%; height: 100%;\"\r\n");
      out.write("\t\t\t\t\t\tname=\"routedesc\" id=\"routedesc\"></textarea></td>\r\n");
      out.write("\t\t\t\t<td><label>from(a).to(b)</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"routex\" id=\"routex\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" name=\"routey\" id=\"routey\"\r\n");
      out.write("\t\t\t\t\trequired=\"true\" constraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Create</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- Deployement dialog Start-->\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" resizable=\"true\" id=\"createDeployDialog\"\r\n");
      out.write("\t\ttitle=\"Deploy Resource\">\r\n");
      out.write("\t\t<form name=\"deployForm\" id=\"deployForm\" method=\"POST\"\r\n");
      out.write("\t\t\tenctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label for=\"deployName\">Deploy Name</label></td>\r\n");
      out.write("\t\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tname=\"deployName\" id=\"deployName\" required=\"true\"\r\n");
      out.write("\t\t\t\t\t\tconstraints=\"{min:0, max:900}\" /></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label for=\"deployType\">Type:</label></td>\r\n");
      out.write("\t\t\t\t\t<td><select value=\"\" name=\"deployType\" id=\"deployType\">\r\n");
      out.write("\t\t\t\t\t\t\t<option>Java</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>Class</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>Jar</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>Script</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>Template</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>Jsp</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>ClassService</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>ServiceArchive</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>ProtocolBuf</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>xml</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>yaml</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>process</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>in</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>out</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>rule</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>jaxb</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>jaxbEvents</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>javarule</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>cacheitem</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option>titan</option>\r\n");
      out.write("\t\t\t\t\t\t    <option>plugin</option>\r\n");
      out.write("\t\t\t\t\t\t    <option>image</option>\r\n");
      out.write("\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label for=\"uploadedResource\">Resource</label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"file\" name=\"uploadedResource\"\r\n");
      out.write("\t\t\t\t\t\tid=\"uploadedResource\"></input></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\t\tonclick='createDeploy()'>Deploy</button></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Deployement dialog end -->\r\n");
      out.write("\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" resizable=\"true\" id=\"createPageDialog\"\r\n");
      out.write("\t\ttitle=\"Create/Update Web Page\"\r\n");
      out.write("\t\texecute=\"createPage(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"p_streamname\">Page Processor:</label></td>\r\n");
      out.write("\t\t\t\t<td><select name=\"p_streamname\" id=\"p_streamname\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"pagename\">Name:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"pagename\" id=\"pagename\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<td><label for=\"pagecontent\">Content </label></td>\r\n");
      out.write("\t\t\t\t<td><div dojoType=\"dijit.layout.ContentPane\"\r\n");
      out.write("\t\t\t\t\t\ttitle=\"Page Content\" id=\"pagecontentwnd\">\r\n");
      out.write("\t\t\t\t\t\t<textarea style=\"border-color: yellow; width: 100%; height: 100%;\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"pagecontent\" id=\"pagecontent\"></textarea></td>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"1\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Create/Update</button></td>\r\n");
      out.write("\t\t\t\t<td colspan=\"1\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"button\" onclick=\"exportPageDynamicUrl()\">Export\r\n");
      out.write("\t\t\t\t\t\tDynamic Url</button></td>\r\n");
      out.write("\t\t\t\t<td colspan=\"1\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"button\" onclick=\"exportPageStaticUrl()\">Export\r\n");
      out.write("\t\t\t\t\t\tStatic Url</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"1\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"button\" onclick=\"editStreamPage()\">Edit Content</button></td>\r\n");
      out.write("\t\t\t\t<td colspan=\"1\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\tonclick='closePageDialog()'>Close</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<div dojoType=\"dojox.layout.ResizeHandle\" targetId=\"pagecontentwnd\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"Widgets\">\r\n");
      out.write("\t\t<div id=\"ndtype2\">Widgets</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<div id=\"wdgts\">\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Blinker</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Dimmer</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Light</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Green Bulb</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Red Bulb</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Flat Green Led</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Flat Red Led</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Flat Yellow Led</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Tag</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Continous Timer</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">Onetime Timer</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">InputPort</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">OutputPort</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">AuxPort</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\" id=\"Port\">Port</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">PortMethod</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">ComplexInputPort</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">ComplexOutputPort</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">ComplexAuxPort</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">ComplexPort</div>\r\n");
      out.write("\t\t\t\t<div class=\"dojoDndItem\">ComplexPortMethod</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div dojoType=\"dojox.layout.ResizeHandle\" targetId=\"Widgets\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"dynamicnodes\"></div>\r\n");
      out.write("\t<div id=\"pagemodules\"></div>\r\n");
      out.write("\t<div dojoType=\"dijit.Menu\" id=\"popup1campus\"\r\n");
      out.write("\t\tcontextMenuForWindow=\"false\" style=\"display: none;\"\r\n");
      out.write("\t\ttargetNodeIds=\"graph\">\r\n");
      out.write("\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\" onclick=\"draw();\">Redraw</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\tonclick=\"mycustommenu(null,null);\">Show Custom Menu</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\" onclick=\"hideCMenu();\">Hide\r\n");
      out.write("\t\t\tCustom Menu</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\tonclick=\"showRelatedNodes();\">Show Pages</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\tonclick=\"setStreamConfigDlg();\">Config</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\tonclick=\"updateObject();\">Update Object</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\tonclick=\"execElementFromGraph();\">\r\n");
      out.write("\t\t\t<B><font color=\"blue\">Execute!!</font></B>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\tonclick=\"setAnonConfigDlg();\">\r\n");
      out.write("\t\t\t<B><font color=\"blue\">Config Options!!</font></B>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\tonclick=\"ShowSelectedAdvancedMenu();\">\r\n");
      out.write("\t\t\t<B><font color=\"blue\">Advanced</font></B>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuItem\">\r\n");
      out.write("\t\t\t<span>Events</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"event_popupmenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"event_popupmenu_addexisting\"\r\n");
      out.write("\t\t\t\t\tdisabled=\"false\" onclick=\"addExistingEvent();\">Add Existing\r\n");
      out.write("\t\t\t\t\tEvent</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addeventmenuitem\"\r\n");
      out.write("\t\t\t\t\tdisabled=\"false\" onclick=\"showAddEventDialogAtMouse();\">Add\r\n");
      out.write("\t\t\t\t\tEvent</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"event_popupmenu_addproperty\"\r\n");
      out.write("\t\t\t\t\tdisabled=\"false\" onclick=\"ShowAddEventPropertyAtMouse();\">Add\r\n");
      out.write("\t\t\t\t\tEvent Property</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"event_popupmenu_save\"\r\n");
      out.write("\t\t\t\t\tdisabled=\"false\" onclick=\"SaveEvent();\">Save Event</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"event_popupmenu_delete\"\r\n");
      out.write("\t\t\t\t\tdisabled=\"false\" onclick=\"DeleteEvent();\">Delete Event</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"event_popupmenu_deletefromserver\"\r\n");
      out.write("\t\t\t\t\tdisabled=\"false\" onclick=\"DeleteEventFromServer();\">Delete\r\n");
      out.write("\t\t\t\t\tFrom Server</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuItem\">\r\n");
      out.write("\t\t\t<span>Streams</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addstreammenuitem\"\r\n");
      out.write("\t\t\t\t\tdisabled=\"false\" onclick=\"showAddStreamDialogAtMouse();\">Add\r\n");
      out.write("\t\t\t\t\tStream</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"ShowAddStreamPropertyDialog();\">Add Stream Property</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"showUpdateStreamDialogAtMouse();\">Modify Stream</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"SaveStream();\">Save Stream</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"DeleteStream();\">Delete Stream</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"testEventFromUser();\">Test Event To Page Stream</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"testEventAutomated();\">Send Test Event</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"setStreamConfigDlg();\">Stream Config</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"covertToNonFreeHand();\">Remove FreeHand Drawing</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"DeleteStreamFromServer();\">Delete From Server</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuItem\">\r\n");
      out.write("\t\t\t<span>Nodes</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addnodemenuitem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"showAddNodeDialogAtMouse();\">Add Node</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"SaveNode();\">Save Node</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"showUpdateNodeDialogAtMouse();\">Modify Node</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"setNodeConfigDlg();\">Node Config</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"if(lastSelectedNode!=null)lastSelectedNode.configItems=null;\">Clear\r\n");
      out.write("\t\t\t\t\tExtra Config</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"DeleteNode();\">Delete Node</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"editJavaProcess();\">Edit Java Process</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"DeleteNodeFromServer();\">Delete From Server</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"updateToDoStatus();\">Update Completion Status</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"updateToDoAction();\">Update action</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"ModifySchemaForStream();\">ModifySchema</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuItem\">\r\n");
      out.write("\t\t\t<span>Routes</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"showAddRouteDialogAtMouse();\">Add Route</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"SaveRoute();\">Save Route</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"DeleteRoute();\">Delete Route</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuItem\">\r\n");
      out.write("\t\t\t<span>Connections</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addconnectionmenuitem\"\r\n");
      out.write("\t\t\t\t\tonClick=\"showAddConnDialogAtMouse();\">Add Connection</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"SaveConnection();\">Save Conn</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"DeleteConnection();\">Delete Conn</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"showUpdateConnDialogAtMouse();\">Modify Conn</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"editConnection();\">Edit Connection</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"modifyConnectionColor();\">Edit Connection Color</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"DeleteConnFromServer();\">Delete From Server</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" disabled=\"false\"\r\n");
      out.write("\t\t\t\t\tonclick=\"reverseSelectedConnection();\">Reverse</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuItem\">\r\n");
      out.write("\t\t\t<span>Notes</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"showNoteDlg();\">Add\r\n");
      out.write("\t\t\t\t\tNote</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"removeNote();\">Remove\r\n");
      out.write("\t\t\t\t\tNote</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuItem\">\r\n");
      out.write("\t\t\t<span>Group</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"openGroup();\">Open\r\n");
      out.write("\t\t\t\t\tGroup</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"openGroups();\">Open\r\n");
      out.write("\t\t\t\t\tAll Groups</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"closeGroups();\">Close\r\n");
      out.write("\t\t\t\t\tall Groups</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"renameGroup();\">Rename</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\tonClick=\"freeHandRegion(finditemsinregion,createGroup)\">Create\r\n");
      out.write("\t\t\t\t\tGroup</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"deleteGroup();\">Delete\r\n");
      out.write("\t\t\t\t\tGroup</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"modifyGroup();\">Modify\r\n");
      out.write("\t\t\t\t\tGroup</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"addExistEventDlg\"\r\n");
      out.write("\t\ttitle=\"Choose Event To Add\"\r\n");
      out.write("\t\texecute=\"addExistingEventToPage(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"chooseExistEvent\">Event</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"chooseExistEvent\"\r\n");
      out.write("\t\t\t\t\tid=\"chooseExistEvent\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Add Event</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"openGraphDesignDialog\"\r\n");
      out.write("\t\ttitle=\"Choose GraphTo open\"\r\n");
      out.write("\t\texecute=\"getGraphDesignFromServer(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"choosegraphid2\">Graph :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"choosegraphid2\" id=\"choosegraphid2\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t<button dojoType=\"dijit.form.Button\" type=\"submit\">Load\r\n");
      out.write("\t\t\t\t\t\tGraph</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"deleteElementDialog\"\r\n");
      out.write("\t\ttitle=\"Choose Element To Delete\"\r\n");
      out.write("\t\texecute=\"deleteElement(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"chooseelem\">Element :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"chooseelem\" id=\"chooseelem\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t<button dojoType=\"dijit.form.Button\" type=\"submit\">Delete\r\n");
      out.write("\t\t\t\t\t\tElement</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"updateElementDialog\"\r\n");
      out.write("\t\ttitle=\"Choose Element To Update\"\r\n");
      out.write("\t\texecute=\"updateElement(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"chooseuelem\">Element :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"chooseuelem\" id=\"chooseuelem\"\r\n");
      out.write("\t\t\t\t\tonchange=\"updatePropName();\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"eleprop\">Property :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"eleprop\" id=\"eleprop\"\r\n");
      out.write("\t\t\t\t\tonchange=\"updatePropValue();\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"propval\">Value :</label></td>\r\n");
      out.write("\t\t\t\t<td><input type=\"txt\" value=\"\" name=\"propval\" id=\"propval\">\r\n");
      out.write("\t\t\t\t\t</input></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t<button dojoType=\"dijit.form.Button\" type=\"submit\">Update\r\n");
      out.write("\t\t\t\t\t\tElement</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"addModuleNodeDialog\"\r\n");
      out.write("\t\ttitle=\"Choose Module to add as node\"\r\n");
      out.write("\t\texecute=\"addModuleNode(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"modnodeEle\">Module :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"modnodeEle\" id=\"modnodeEle\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t<button dojoType=\"dijit.form.Button\" type=\"submit\">Update\r\n");
      out.write("\t\t\t\t\t\tElement</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"animElementDialog\"\r\n");
      out.write("\t\ttitle=\"Choose Element To animate\"\r\n");
      out.write("\t\texecute=\"animElement(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"animelem\">Element :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"animelem\" id=\"animelem\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"animAction\">Action :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"animAction\" id=\"animAction\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"animObject\">Animation :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"animObject\" id=\"animObject\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t<button dojoType=\"dijit.form.Button\" type=\"submit\">Choose\r\n");
      out.write("\t\t\t\t\t\tElement</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"chooseEventDialog\"\r\n");
      out.write("\t\ttitle=\"Choose Event To Listen\" execute=\"listenToEvent();\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"chooseeventid\">Event</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"chooseeventid\" id=\"chooseeventid\"\r\n");
      out.write("\t\t\t\t\tonchange=\"if(this.selectedIndex > 0){var a = this.options[this.selectedIndex].value; ShowEventProperty(a);}\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"codecontent\">Code To Execute</label></td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<div dojoType=\"dijit.layout.ContentPane\" title=\"Page Content\"\r\n");
      out.write("\t\t\t\t\t\tid=\"codecontentdiv\">\r\n");
      out.write("\t\t\t\t\t\t<textarea style=\"border-color: yellow; width: 100%; height: 100%;\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"codecontent\" id=\"codecontent\"></textarea>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dojox.layout.ResizeHandle\" targetId=\"codecontentdiv\"></div>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t<button dojoType=\"dijit.form.Button\" type=\"submit\">Listen\r\n");
      out.write("\t\t\t\t\t\tTo Event</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"addStaticComponentDialog\"\r\n");
      out.write("\t\ttitle=\"Add static Component\"\r\n");
      out.write("\t\texecute=\"addStaticComponentFromServer(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"addstaticcomponentname\">UniqueId :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"addstaticcomponentname\"\r\n");
      out.write("\t\t\t\t\tid=\"addstaticcomponentname\" onchange=\"addStaticCompChange();\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"addstaticcomponentid\">id :</label></td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" value=\"\" name=\"addstaticcomponentid\"\r\n");
      out.write("\t\t\t\t\tid=\"addstaticcomponentid\"></input></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t<button dojoType=\"dijit.form.Button\" type=\"submit\">Load\r\n");
      out.write("\t\t\t\t\t\tGraph</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"savestaticElementDialog\"\r\n");
      out.write("\t\ttitle=\"Please enter element to save\"\r\n");
      out.write("\t\texecute=\"saveStaticElement(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"saveelem\">Element :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"saveelem\" id=\"saveelem\"\r\n");
      out.write("\t\t\t\t\tonchange=\"saveStaticCompChange();\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"saveelemdoc\">Documentation :</label></td>\r\n");
      out.write("\t\t\t\t<td><input type=\"txt\" value=\"\" name=\"saveelemdoc\"\r\n");
      out.write("\t\t\t\t\tid=\"saveelemdoc\"> </input></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"saveelemname\">Unique id :</label></td>\r\n");
      out.write("\t\t\t\t<td><input type=\"txt\" value=\"\" name=\"saveelemname\"\r\n");
      out.write("\t\t\t\t\tid=\"saveelemname\"> </input></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t<button dojoType=\"dijit.form.Button\" type=\"submit\">Save\r\n");
      out.write("\t\t\t\t\t\tStatic Element</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"addPropertyDialog\"\r\n");
      out.write("\t\ttitle=\"Add Event Property\"\r\n");
      out.write("\t\texecute=\"addEventProperty(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"aeeventid\">Event: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"aeeventid\" id=\"aeeventid\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : TestEvent</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"aename\">Name: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"aename\" id=\"aename\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"aeindexid\">Index: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"aeindexid\" id=\"aeindexid\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : 1</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"aetype\">type: </label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"aetype\" id=\"aetype\">\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.String</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Double</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Boolean</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Float</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Integer</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Long</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.util.Date</option>\r\n");
      out.write("\t\t\t\t\t\t<option>boolean</option>\r\n");
      out.write("\t\t\t\t\t\t<option>float</option>\r\n");
      out.write("\t\t\t\t\t\t<option>double</option>\r\n");
      out.write("\t\t\t\t\t\t<option>long</option>\r\n");
      out.write("\t\t\t\t\t\t<option>int</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Add Property</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"addStreamPropertyDialog\"\r\n");
      out.write("\t\ttitle=\"Add Stream Property\"\r\n");
      out.write("\t\texecute=\"addStreamProperty(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"streventid\">Stream: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"streventid\" id=\"streventid\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : TestEvent</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"strname\">Name: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"strname\" id=\"strname\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : name</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"strtype\">Type: </label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"strtype\" id=\"strtype\">\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.String</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Double</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Boolean</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Float</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Integer</option>\r\n");
      out.write("\t\t\t\t\t\t<option>java.lang.Long</option>\r\n");
      out.write("\t\t\t\t\t\t<option>boolean</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option>float</option>\r\n");
      out.write("\t\t\t\t\t\t<option>double</option>\r\n");
      out.write("\t\t\t\t\t\t<option>long</option>\r\n");
      out.write("\t\t\t\t\t\t<option>int</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"strproptype\">Property Type: </label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"property\" name=\"strproptype\"\r\n");
      out.write("\t\t\t\t\tid=\"strproptype\">\r\n");
      out.write("\t\t\t\t\t\t<option>property</option>\r\n");
      out.write("\t\t\t\t\t\t<option>propertyXmlExpr</option>\r\n");
      out.write("\t\t\t\t\t\t<option>body</option>\r\n");
      out.write("\t\t\t\t\t\t<option>bodyXmlExpr</option>\r\n");
      out.write("\t\t\t\t\t\t<option>propertyJsonPathExpr</option>\r\n");
      out.write("\t\t\t\t\t\t<option>bodyJsonPathExpr</option>\r\n");
      out.write("\t\t\t\t\t\t<option>customcode</option>\r\n");
      out.write("\t\t\t\t\t\t<option>propjexl</option>\r\n");
      out.write("\t\t\t\t\t\t<option>bodyjexl</option>\r\n");
      out.write("\t\t\t\t\t\t<option>propjxpath</option>\r\n");
      out.write("\t\t\t\t\t\t<option>bodyjxpath</option>\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"strdestporp\">DestinationProp: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"strdestporp\" id=\"strdestporp\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"strxmlxpr\">XML Expr: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"strxmlxpr\" id=\"strxmlxpr\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"strpropindex\">Index: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"strpropindex\" id=\"strpropindex\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Add Stream Property</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"openGraphDialog\"\r\n");
      out.write("\t\ttitle=\"Choose GraphTo open\"\r\n");
      out.write("\t\texecute=\"getGraphFromServer(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"choosegraphid\">From :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"choosegraphid\" id=\"choosegraphid\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Load Graph</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"importGraphDialog\"\r\n");
      out.write("\t\ttitle=\"Choose GraphTo import\"\r\n");
      out.write("\t\texecute=\"importGraphFromServer(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"chooseimportgraphid\">From :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"chooseimportgraphid\"\r\n");
      out.write("\t\t\t\t\tid=\"chooseimportgraphid\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Import Graph</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"saveConnecDialog\"\r\n");
      out.write("\t\ttitle=\"Save Connection Dialog\"\r\n");
      out.write("\t\texecute=\"saveConnectionItem(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"saveconnid\">From :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"saveconnid\" id=\"saveconnid\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Save Connection</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"saveGraphDialog\"\r\n");
      out.write("\t\ttitle=\"Save Graph Dialog\"\r\n");
      out.write("\t\texecute=\"saveGraphData(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"savegraphid\">Save Graph As</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"savegraphid\" id=\"savegraphid\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"savegraphtype\">Type of graph</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"savegraphtype\" id=\"savegraphtype\" required=\"true\"\r\n");
      out.write("\t\t\t\t\tvalue=\"graph\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"savegraphicon\">Icon</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"savegraphicon\" id=\"savegraphicon\" required=\"true\" value=\"\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Save Graph</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"addNodeDialog\" title=\"Add Note\"\r\n");
      out.write("\t\texecute=\"addNoteItem(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"savenodeid\">Note:</label></td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<div dojoType=\"dijit.layout.ContentPane\" title=\"Page Content\"\r\n");
      out.write("\t\t\t\t\t\tid=\"savenodeidpageid\">\r\n");
      out.write("\t\t\t\t\t\t<textarea\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"border-color: yellow; width: 100%; height: 180px;\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"savenodeid\" id=\"savenodeid\"></textarea>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dojox.layout.ResizeHandle\"\r\n");
      out.write("\t\t\t\t\ttargetId=\"savenodeidpageid\"></div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"noteforid\">Attach To:</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"noteforid\" id=\"noteforid\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Save Note</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"createConnectionDialog\"\r\n");
      out.write("\t\ttitle=\"Create Connection Node\"\r\n");
      out.write("\t\texecute=\"createConnectionNode(dojo.toJson(arguments[0], true))\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"connectionId\">Id: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"connectionId\" id=\"connectionId\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : connection1</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"fromNode\">From :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"fromNode\" id=\"fromNode\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"toNode\">To:</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"toNode\" id=\"toNode\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"ctype\">Connection Type:</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"ctype\" id=\"ctype\">\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.ConditionalConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.FileRuleBasedConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.GlobalRuleBasedConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.KeyedRuleBasedConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.RuleBasedConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.camel</option>\r\n");
      out.write("\t\t\t\t\t\t<option>arbitconnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>dependency</option>\r\n");
      out.write("\t\t\t\t\t\t<option>loopback</option>\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"conncond\">Condition:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"conncond\" id=\"conncond\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>select event as evt from CacheEvent</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"attribCC\">attrib:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"attribCC\" id=\"attribCC\" required=\"true\" value=\"\" /></td>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"sequenceCC\">sequence:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"sequenceCC\" id=\"sequenceCC\" required=\"true\" value=\"0\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"connshapeid\" id=\"connshapeid\"></input>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Create Connection</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- Modify Connection -->\r\n");
      out.write("\t<div dojoType=\"dijit.Dialog\" id=\"updateConnectionDialog\"\r\n");
      out.write("\t\ttitle=\"Modify Connection\" execute=\"updateConnection(arguments[0])\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_connectionId\">Id: </label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"u_connectionId\" id=\"u_connectionId\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>Example : connection1</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_fromNode\">From :</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"u_fromNode\" id=\"u_fromNode\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_toNode\">To:</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"u_toNode\" id=\"u_toNode\">\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_ctype\">Connection Type:</label></td>\r\n");
      out.write("\t\t\t\t<td><select value=\"\" name=\"u_ctype\" id=\"u_ctype\">\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.ConditionalConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.FileRuleBasedConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.GlobalRuleBasedConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.KeyedRuleBasedConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.RuleBasedConnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>org.ptg.processors.connection.camel</option>\r\n");
      out.write("\t\t\t\t\t\t<option>arbitconnection</option>\r\n");
      out.write("\t\t\t\t\t\t<option>dependency</option>\r\n");
      out.write("\t\t\t\t\t\t<option>loopback</option>\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"u_conncond\">Condition:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"u_conncond\" id=\"u_conncond\" required=\"true\" /></td>\r\n");
      out.write("\t\t\t\t<td><label>select event as evt from Event</label></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"attribEC\">attrib:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"attribEC\" id=\"attribEC\" required=\"true\" value=\"\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"sequenceEC\">sequence:</label></td>\r\n");
      out.write("\t\t\t\t<td><input dojoType=\"dijit.form.ValidationTextBox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"sequenceEC\" id=\"sequenceEC\" required=\"true\" value=\"0\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"><button dojoType=\"dijit.form.Button\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"submit\">Modify Connection</button></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- End Modify Connection -->\r\n");
      out.write("\t<div id=\"menubar\" dojoType=\"dijit.MenuBar\">\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>File</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"fileMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"openGraphMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);openGraph()\">Open Graph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"saveCurrentGraphId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);saveGraph()\">Save Current Graph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"clearGraphMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);clearGraph()\">New Graph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"clearGraphRedrawMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);draw()\">Redraw</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"showHistoricalMenuId\" onClick=\"menuItemClicked(this.id);showHistorical()\">Show\r\n");
      out.write("\t\t\t\t\tHistorical</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"CompileProcessMenuId\" onClick=\"menuItemClicked(this.id);CompileProcess()\">Compile\r\n");
      out.write("\t\t\t\t\tGraph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileGraphOnServerMenuId\" onClick=\"menuItemClicked(this.id);compileGraphOnServer()\">Compile\r\n");
      out.write("\t\t\t\t\tGraph on server</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"validateProcessMenuId\" onClick=\"menuItemClicked(this.id);validateProcess()\">Check\r\n");
      out.write("\t\t\t\t\tGraph Status</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileCamelProcessMenuId\" onClick=\"menuItemClicked(this.id);compileCamelProcess();\">Compile\r\n");
      out.write("\t\t\t\t\tCamel Process</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=moveGraphOnClickMenuId\" onClick=\"menuItemClicked(this.id);moveGraphOnClick(false)\">Move\r\n");
      out.write("\t\t\t\t\tGraph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"moveGraphOnClickMenuId\" onClick=\"menuItemClicked(this.id);moveGraphOnClick(true)\">Move\r\n");
      out.write("\t\t\t\t\tSelective Graph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"fixGraphMenuIdMenuId\" onClick=\"menuItemClicked(this.id);fixGraph()\">Fix Graph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"showGraphItemStatusMenuId\" onClick=\"menuItemClicked(this.id);showGraphItemStatus()\">Show\r\n");
      out.write("\t\t\t\t\tGraph Elements</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"saveWideConfigMenuId\" onClick=\"menuItemClicked(this.id);saveWideConfig()\">Save\r\n");
      out.write("\t\t\t\t\tWide Configuration</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"getWideConfigMenuId\" onClick=\"menuItemClicked(this.id);getWideConfig()\">Load\r\n");
      out.write("\t\t\t\t\tWide Configuration</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"modifyWideConfigurationMenuId\" onClick=\"menuItemClicked(this.id);modifyWideConfiguration()\">Configure\r\n");
      out.write("\t\t\t\t\tWide</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"DeployPageMenuId\" onClick=\"menuItemClicked(this.id);DeployPage()\">\r\n");
      out.write("\t\t\t\t\t<b>Deploy Resource</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"enableBamMenuId\" onClick=\"menuItemClicked(this.id);enableBam()\">Update\r\n");
      out.write("\t\t\t\t\tBAM</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"startSyncingMenuId\" onClick=\"menuItemClicked(this.id);startSyncing()\">Start\r\n");
      out.write("\t\t\t\t\tStreamer</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"stopSyncingMenuId\" onClick=\"menuItemClicked(this.id);stopSyncing()\">Stop\r\n");
      out.write("\t\t\t\t\tStreamer</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"showInspectorMenuId\" onClick=\"menuItemClicked(this.id);showInspector()\">Inspector</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"undoMenuId\" onClick=\"menuItemClicked(this.id);undo()\">Undo</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"redoMenuId\" onClick=\"menuItemClicked(this.id);redo()\">Redo</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"checkPointMenuId\" onClick=\"menuItemClicked(this.id);checkPoint()\">Check\r\n");
      out.write("\t\t\t\t\tPoint</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Connection</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"connMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"drawFreeFlowConnnMenuId\" onClick=\"menuItemClicked(this.id);drawFreeFlow(true)\">Free\r\n");
      out.write("\t\t\t\t\tHand Connection</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"drawFreeFlowArbitConnMenuId\" onClick=\"menuItemClicked(this.id);drawFreeFlow(false)\">Free\r\n");
      out.write("\t\t\t\t\tHand Arbit Connection</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"setConnColorMenuId\" onClick=\"menuItemClicked(this.id);setConnColor();\">Set\r\n");
      out.write("\t\t\t\t\tConnection Color</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"drawConnOnClicksMenuId\" onClick=\"menuItemClicked(this.id);drawConnOnClicks()\">Connect\r\n");
      out.write("\t\t\t\t\tStreams</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"drawArbitConnOnClicksMenuId\" onClick=\"menuItemClicked(this.id);drawArbitConnOnClicks()\">Arbit\r\n");
      out.write("\t\t\t\t\tConnect Streams</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"toggleStreamToNodeConnMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);if(showStreamToNode==false){showStreamToNode=true;}else {showStreamToNode=false;}\">\r\n");
      out.write("\t\t\t\t\t<B><font color=\"blue\">Toggle Stream To Node Conn</font></B>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Free Hand</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"freeHandMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,createLayer)\" id=\"createLayerMenuId\">Create\r\n");
      out.write("\t\t\t\t\tLayer</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,createAvoidanceLayer)\" id=\"createAvoidanceLayerMenuId\">Create Avoidance\r\n");
      out.write("\t\t\t\t\tLayer</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,createGroupProcNode)\" id=\"CreateFastProcessorMenuId\">Create\r\n");
      out.write("\t\t\t\t\tFast Processor</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,createGroup)\" id=\"GroupSelectionMenuId\">Group\r\n");
      out.write("\t\t\t\t\tSelection</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,yarrange)\" id=\"AllignHorizontallyMenuId\">Allign\r\n");
      out.write("\t\t\t\t\thorizontally</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,xarrange)\"  id=\"AllignVerticallyMenuId\">Align\r\n");
      out.write("\t\t\t\t\tVertically</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"connectWithIntersectorMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinintersection,annotateComp)\">\r\n");
      out.write("\t\t\t\t\t<b>Connect With Intersector</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t     <div dojoType=\"dijit.MenuItem\" id=\"createPatternId\"\r\n");
      out.write("                    onClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinintersection,createPattern)\">\r\n");
      out.write("                    <b>Create Pattern</b>\r\n");
      out.write("                </div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"selectWithFreeHandMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,createSelection)\">\r\n");
      out.write("\t\t\t\t\t<b>Select With Free Hand</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"setModuleWigthMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,setModWeight)\">\r\n");
      out.write("\t\t\t\t\t<b>Set module weight</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"portifyInModuleMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,portifyModuleInput)\">\r\n");
      out.write("\t\t\t\t\t<b>Portify Module(in)</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"portifyOutModuleMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,portifyModuleOutput)\">\r\n");
      out.write("\t\t\t\t\t<b>Portify Module(out)</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"portifyAuxModuleMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,portifyModuleAux)\">\r\n");
      out.write("\t\t\t\t\t<b>Portify Module(aux)</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"CreateCollectionMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,createSelectGroup)\">\r\n");
      out.write("\t\t\t\t\t<b>Create Collection</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"pasteFreeHandMenuId\" onClick=\"menuItemClicked(this.id);pasteFreeHand();\">\r\n");
      out.write("\t\t\t\t\t<b>Paste Selection</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"testMappingMenuId\" \r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,testSelection)\">Test\r\n");
      out.write("\t\t\t\t\tMapping</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"creteEventFromTypeMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,createEventFromTypeSel)\">Create\r\n");
      out.write("\t\t\t\t\tEvent From Type</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"deleteFreeHandSelectionMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,deleteSelection)\">Delete\r\n");
      out.write("\t\t\t\t\tFree hand Selection</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"CloneFreeHandSelectionMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,cloneSelection)\">Clone\r\n");
      out.write("\t\t\t\t\tSelection</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"CompileSelectedItemsMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,compileSelected)\">Compile\r\n");
      out.write("\t\t\t\t\tselected items</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"renameSelectedItemsMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,renameSelected)\">Rename\r\n");
      out.write("\t\t\t\t\tselected</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"CreateRegionMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,createRegion)\">Create\r\n");
      out.write("\t\t\t\t\tRegion</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"CreateBoundingRectMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(findBoundingRect,createBoundRect)\">Create\r\n");
      out.write("\t\t\t\t\tBounding Rect</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);setRegionType()\" id=\"setRegionTypeMenuId\">Set\r\n");
      out.write("\t\t\t\t\tRegion Type</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);setRegionOrder()\"  id=\"setRegionOrderMenuId\">Set\r\n");
      out.write("\t\t\t\t\tRegion Order</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);recompileRegions()\"  id=\"recompileRegionsMenuId\">Recompile\r\n");
      out.write("\t\t\t\t\tregions</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);updateRegion()\"  id=\"updateRegionsMenuId\">Update\r\n");
      out.write("\t\t\t\t\tRegions</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);deleteRegion()\"  id=\"deleteRegionsMenuId\">Delete\r\n");
      out.write("\t\t\t\t\tRegion</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"createArbitObjectMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,createArbitObject)\">Create\r\n");
      out.write("\t\t\t\t\tArbit Object</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Export</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"exportMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);importExistingGraph()\" id=\"importExistingGraphMenuId\">Import\tExisting Graph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);exportGraph()\" id=\"exportExistingGraphMenuId\">Export Graph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);exportSelection()\" id=\"exportSelectionGraphMenuId\">Export\tSelection</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);downloadCurrentDesign()\" id=\"downloadCurrentDesignMenuId\">Download Design</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);downloadCurrentGraph()\" id=\"downloadCurrentGraphMenuId\">Download Graph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);downloadCurrentDesignAsPdf()\" id=\"downloadCurrentGraphAsPdfMenuId\">Download as PDF</div>\r\n");
      out.write("                <div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);downloadCurrentDesignAsImage()\" id=\"downloadCurrentGraphAsImageMenuId\">Download as Image</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Artist</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"artistMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"artistsGraphMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,true,100)\">Artists graph</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"setExtraMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,setGroupExtra)\">Set\r\n");
      out.write("\t\t\t\t\tExtra</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"setProcessorMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,setGroupProcessor)\">Set\r\n");
      out.write("\t\t\t\t\tProcessor</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"setPropertyMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,setGroupProperty)\">Set\r\n");
      out.write("\t\t\t\t\tProperty</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"convertMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,convertGroup)\">Convert</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"AutoCompleteFreeHandMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,magicSpell1)\">Auto\r\n");
      out.write("\t\t\t\t\tComplete ( TODO )</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"searchSelectedMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,magicSpell2)\">Search\r\n");
      out.write("\t\t\t\t\tSelected ( TODO )</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"magicSpell3MenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,magicSpell3)\">Magic\r\n");
      out.write("\t\t\t\t\tSpell3 ( TODO )</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"customMenuMenuId\" onClick=\"menuItemClicked(this.id);mycustommenu();\">Custom\r\n");
      out.write("\t\t\t\t\tmenu</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Web Page</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"WebPageMenuId\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);NewPage()\">New Page</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Window</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"WindowMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);hideAllWindows();\">\r\n");
      out.write("\t\t\t\t\t<B><font color=\"blue\">Hide All Windows</font></B>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"showAllWindowsMenuId\" onClick=\"menuItemClicked(this.id);showAllWindows();\">\r\n");
      out.write("\t\t\t\t\t<B><font color=\"blue\">Show All Windows</font></B>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuSeparator\" ></div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"showHideCommandWindowMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);if(cw){hidediv('cmdnode');cw=false;}else{cw=true;showdiv('cmdnode');}\">Command\r\n");
      out.write("\t\t\t\t\tWindow</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"showHideDocumentWindowMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);if(dw){hidediv('docnode');dw=false;}else{dw=true;showdiv('docnode');}\">Document\r\n");
      out.write("\t\t\t\t\twindow</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\"  id=\"propertiesWindowShowHideMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);if(pw){hidediv('propnode');pw=false;}else{pw=true;showdiv('propnode');}\">Properties\r\n");
      out.write("\t\t\t\t\twindow</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"HistoryWindowShowHideMenuId\"\r\n");
      out.write("\t\t\t\t\tonClick=\"menuItemClicked(this.id);if(hw){hidediv('histnode');hw=false;}else{hw=true;showdiv('histnode');}\">Historical\r\n");
      out.write("\t\t\t\t\twindow</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Routing Engine</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"RoutingEngineMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);stopRE()\" id=\"StopRoutingMenuId\">Stop Routing\r\n");
      out.write("\t\t\t\t\tEngine</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);startRE()\" id=\"StartRoutingEngineMenuId\">Start\r\n");
      out.write("\t\t\t\t\tRouting Engine</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);restartRE()\"  id=\"ReStartRoutingEngineMenuId\">Re Start\r\n");
      out.write("\t\t\t\t\tRouting Engine</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);addRoutesRE()\"  id=\"AddRoutesToRoutingEngineMenuId\">Add\r\n");
      out.write("\t\t\t\t\tRoutes To RoutingEngine</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Mapper</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"MapperMenu\">\r\n");
      out.write("\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"if(moveGroupElements){moveGroupElements=false}else{moveGroupElements=true}\" id=\"moveGroupElementsMenuId\">MoveGroupElements</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.PopupMenuItem\" id=\"codePopupMenuItem\">\r\n");
      out.write("\t\t\t\t\t<span>Java Code</span>\r\n");
      out.write("\t\t\t\t\t<div id=\"javaCodeMenuColl\" dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addMethodMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);addMtdMapping()\">Add Method Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addFieldMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);addFldMapping()\">Add Field Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"createBeanMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);createBeanMappingProcessor()\">Create Bean</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"createVarMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);createVarOnlyMappingProcessor()\">Create Var</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"createKeyValuePairMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);createVarMappingProcessor()\">Create KeyVal Pair</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"createEventMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);createEventMappingProcessor()\">Create Event\r\n");
      out.write("\t\t\t\t\t\t\tMapping</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.PopupMenuItem\" id=\"sqlPopupMenuItem\">\r\n");
      out.write("\t\t\t\t\t<span>SQL</span>\r\n");
      out.write("\t\t\t\t\t<div id=\"sqlMenuColl\" dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"parseSQLMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);parseSQL()\">Parse SQL</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"parseDynaSQLMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);parseDynaSQL()\">Parse Dyna SQL</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileSQLMappingOnServerMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileSQLMapOnServer()\">Compile SQL Map</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileAndRunSQLMapMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileSQLMapOnServer(null,null,true)\">Compile and\r\n");
      out.write("\t\t\t\t\t\t\tRun SQL Map</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileCrossDBSQLMapMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileSQLDBMapOnServer()\">Compile Cross DB SQL\r\n");
      out.write("\t\t\t\t\t\t\tMap</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.PopupMenuItem\" id=\"connectPopupMenuItem\">\r\n");
      out.write("\t\t\t\t\t<span>Connect</span>\r\n");
      out.write("\t\t\t\t\t<div id=\"connectMenuColl\" dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,30,true)\">Add Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addToRegionMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,500,true,null,'region')\">Add\r\n");
      out.write("\t\t\t\t\t\t\tTo Region Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addFromRegionMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,500,true,'region',null)\">Add\r\n");
      out.write("\t\t\t\t\t\t\tFrom Region Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addToModuleMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,100,false,null,'module')\">Add\r\n");
      out.write("\t\t\t\t\t\t\tTo Module Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addModuleToModuleMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,100,false,'module','module')\">Add\r\n");
      out.write("\t\t\t\t\t\t\tModule To Module Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addFromModuleMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,100,true,'module',null)\">Add\r\n");
      out.write("\t\t\t\t\t\t\tFrom Module Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"connectModuleToPorts\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,100,true,'module','Port')\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Connect Module to ports</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"connectPortsToModule\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,100,true,'Port','module')\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Connect Port to Module</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"connectPorts\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,100,true,'Port','Port')\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Connect Ports</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"connectWordsMenuItem\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,100,true,'ceword','ceword')\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Connect Words</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.PopupMenuItem\" id=\"libPopupMenuItem\">\r\n");
      out.write("\t\t\t\t\t<span>Library</span>\r\n");
      out.write("\t\t\t\t\t<div id=\"libaryMenuColl\" dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addLibMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);openLibraryFunction()\">Open Library</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"saveLibMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);saveLibraryFunction()\">Save Library</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addLibFunctionMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);addLibraryFunction()\">Add Library</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.PopupMenuItem\" id=\"compilePopupMenuItem\">\r\n");
      out.write("\t\t\t\t\t<span>Compile</span>\r\n");
      out.write("\t\t\t\t\t<div id=\"compileMenuColl\" dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t\t   <div dojoType=\"dijit.MenuItem\" id=\"CompileGcodeOnServer\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);compileGcodeMapperOnServer()\">\r\n");
      out.write("                            <b>Compile Gcode</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("                       <div dojoType=\"dijit.MenuItem\" id=\"RunInGrblController\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);runViaGrblControllerOnServer()\">\r\n");
      out.write("                            <b>Execute GRBL</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("                         \r\n");
      out.write("                        \r\n");
      out.write("                          <div dojoType=\"dijit.MenuItem\" id=\"CompileTagModelOnServer\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);compileTagModelOnServer()\">\r\n");
      out.write("                            <b>Compile Tag Model</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("                          <div dojoType=\"dijit.MenuItem\" id=\"CompileEv3Model\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);compileEv3Path()\">\r\n");
      out.write("                            <b>Compile Ev3 Model</b>\r\n");
      out.write("                        </div>                        \r\n");
      out.write("                        <div dojoType=\"dijit.MenuItem\" id=\"TriangulateOnServer\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);triangulateOnServer()\">\r\n");
      out.write("                            <b>Triangulate</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div dojoType=\"dijit.MenuItem\" id=\"ShapeMapperOnServer\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);shapeMapperOnServer()\">\r\n");
      out.write("                            <b>ShapeMapper</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div dojoType=\"dijit.MenuItem\" id=\"ShapePixalateOnServer\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);shapePixalateOnServer()\">\r\n");
      out.write("                            <b>ShapePixalate</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div dojoType=\"dijit.MenuItem\" id=\"ShapeOffsetOnServer\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);shapeOffsetOnServer()\">\r\n");
      out.write("                            <b>ShapeOffset</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div dojoType=\"dijit.MenuItem\" id=\"ShapeCavityOnServer\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);shapeCavityOnServer()\">\r\n");
      out.write("                            <b>Shape Cavity</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("  \t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"shapeOffsetOnServerOutside\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);shapeOffsetOnServerOutside()\">\r\n");
      out.write("                            <b>CutOutside</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("                          <div dojoType=\"dijit.MenuItem\" id=\"shapeOffsetOnServerInside\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);shapeOffsetOnServerInside()\">\r\n");
      out.write("                            <b>CutInside</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileObjectMappingOnServer\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileObjectMapperOnServer()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile Object Mapping</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileSubGraphOnServer\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileSubGraphOnServer()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile Sub Graph</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileMappingOnServer4MI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServer4()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile Mapping</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileWebUIFlowMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileWebUIFlow()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile Web UI Flow</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"RunUICodeFlowMenu\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);runUICodeFlow()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Run UI flow</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileMappingOnServer5MI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServer5()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile And Run Mapping </b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileMappingOnServer6MI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServer6()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile Task Plan</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"runAutomation1\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);runAutomation1()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Run Automation</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileMappingOnServerToCodeMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServerToCode()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile To Code </b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("                      <div dojoType=\"dijit.MenuItem\" id=\"compilePatternsOnServerToCodeMI\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);compilePatternOnServerToCode()\">\r\n");
      out.write("                            <b>Compile Patterns</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"compileMappingOnServerToJavaCodeMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServerToJavaCode()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile To Java</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"compileMappingOnServerToOpenCVCodeMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServerToOpenCVCode()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile OpenCVGraph</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("                        <div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("                            id=\"compileMappingOnServerToVizPipesCodeMI\"\r\n");
      out.write("                            onClick=\"menuItemClicked(this.id);compileMapperOnServerToVizPipeCode()\">\r\n");
      out.write("                            <b>Compile VizPipeline</b>\r\n");
      out.write("                        </div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"compileMappingOnServerToJavaScriptCodeMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServerToJavaScriptCode()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile To Java Script</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileCamelPlan\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileCompileCamelPlan()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile Camel Plan</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileClassOnServer\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileClassOnServer()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile Class</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileSpringConfigOnServer\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileSpringConfigOnServer()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Compile Spring Config</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<!-- <div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);compileMapperOnServer()\">Compile Mappper on server</div> -->\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileEventMappingOnServerMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServer('EventProcessor',pData.eventtype)\">Compile\r\n");
      out.write("\t\t\t\t\t\t\tEvent Mappper on server</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileMappingOnServer2MI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServer2()\">Compile Mappper on\r\n");
      out.write("\t\t\t\t\t\t\tserver</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileMapperTemplateMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileMapperOnServer3()\">Compile Mappper Template\r\n");
      out.write("\t\t\t\t\t\t\ton server</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileGraphTemplateMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);CompileGraphTemplate()\">Compile Graph Template on\r\n");
      out.write("\t\t\t\t\t\t\tserver</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileToDoMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileTodoMapperOnServer()\">Compile Todo Mappper\r\n");
      out.write("\t\t\t\t\t\t\ton server</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"runMapperOnServerMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileAndRunMapperOnServer()\">Run Mappper on\r\n");
      out.write("\t\t\t\t\t\t\tserver</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"runMapperTemplateOnServerMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileAndRunMapperOnServerUserTemplate()\">Run\r\n");
      out.write("\t\t\t\t\t\t\tMappper Template on server</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.PopupMenuItem\" id=\"executePopupMenuItem\">\r\n");
      out.write("\t\t\t\t\t\t\t<span>Execute</span>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"executeMenuColl\" dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileDistGraphMI\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileFastCamelOnServer()\">Compile Distributed\r\n");
      out.write("\t\t\t\t\t\t\t\t\tGraph</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileFastGraphMI\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileFastLocalOnServer()\">Compile Fast Graph</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.PopupMenuItem\" id=\"stateMachinePopupMenuItem\">\r\n");
      out.write("\t\t\t\t\t\t\t<span>State Machine</span>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"stateMachineMenuColl\" dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileDFSMGraphMI\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileDFStateMachineOnServer()\">Compile DF\r\n");
      out.write("\t\t\t\t\t\t\t\t\tStateMachine on server</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.PopupMenuItem\" id=\"utilPopupMenuItem\">\r\n");
      out.write("\t\t\t\t\t<span>Utility</span>\r\n");
      out.write("\t\t\t\t\t<div id=\"utilMenuColl\" dojoType=\"dijit.Menu\">\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"addToArbitObjectMap\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);drawFreeFlow(false,false,100,true,null,'ArbitObject')\">Add\r\n");
      out.write("\t\t\t\t\t\t\tTo ArbitObject Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"getLayout\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);getLayout()\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>Get Layout</b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"validateMappingMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);validateMapper()\">Validate Mapping</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"groupOnInstanceMI\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);freeHandRegion(finditemsinregion,groupOnInstance)\">Group\r\n");
      out.write("\t\t\t\t\t\t\ton Instance</div>\r\n");
      out.write("\t\t\t\t\t\t<div dojoType=\"dijit.MenuItem\" id=\"compileTodoDistances\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"menuItemClicked(this.id);compileTodoDistances()\">Get minimum spanning tree</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

			String ce = request.getParameter("ce"); 
			       			if(ce!=null&&ce.equalsIgnoreCase("true")){
		
      out.write("\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Text Editor</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"CodeEditor\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);compileCodeEditor()\"  id=\"StartTextEditorMenuId\">Text\r\n");
      out.write("\t\t\t\t\tEditor</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);stopCodeEditor()\" id=\"StopCodeEditor\">Stop\r\n");
      out.write("\t\t\t\t\tCode Editor</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Design</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"monitorGraphMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);openGraphDesignDialog()\"  id=\"openGraphDesignDlgMenuId\">Open\r\n");
      out.write("\t\t\t\t\tDesign</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);clearDesign();clearGraph();\"  id=\"NewGraphDesignDlgMenuId\">New\r\n");
      out.write("\t\t\t\t\tDesign</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);saveDesign()\"  id=\"SaveDesignDlgMenuId\">Save\r\n");
      out.write("\t\t\t\t\tdesign</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);applyDesign()\" id=\"ReapplyDesignMenuId\">Reapply\r\n");
      out.write("\t\t\t\t\tdesign</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);deleteElementsDiag();\" id=\"DeleteItemMenuId\">Delete\r\n");
      out.write("\t\t\t\t\tItem</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);updateElementsDiag();\" id=\"UpdateItemMenuId\">Update\r\n");
      out.write("\t\t\t\t\tItem</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);animElementsDiag();\" id=\"AddAnimationMenuId\">Add\r\n");
      out.write("\t\t\t\t\tAnimation</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);gotoEditor();\"  id=\"RunEditorMenuId\">Run\r\n");
      out.write("\t\t\t\t\tEditor</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);saveCompStatic();\" id=\"SaveStaticComponentMenuId\">Save\r\n");
      out.write("\t\t\t\t\tStatic Component</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);addCompStatic();\"  id=\"AddStaticComponentMenuId\">Add\r\n");
      out.write("\t\t\t\t\tStatic Component</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);showModNodeDlg();\"  id=\"AddModuleNodeMenuId\">Add\r\n");
      out.write("\t\t\t\t\tModule Node</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);addAllModuleNodes();\"  id=\"AddAllModuleNodeMenuId\">Add\r\n");
      out.write("\t\t\t\t\tAll Module Node</div>\r\n");
      out.write("                <div dojoType=\"dijit.MenuItem\" id=\"DownloadGCodeMenuItem\"\r\n");
      out.write("                            onClick=\"downloadGcode();\">\r\n");
      out.write("                            <b>Download Gcode</b>\r\n");
      out.write("                </div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Recent Actions</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"RecentActionsMenu\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("            <span>Plugins</span>\r\n");
      out.write("        <div dojoType=\"dijit.Menu\" id=\"allPluginsMenu\">\r\n");
      out.write("\t\t");

        IPluginManager pmgr = CommonUtil.getPluginsManager();
		pmgr.reload();
        for(IPlugin plugin : pmgr.getPlugins()){
        	out.write("<div dojoType=\"dijit.PopupMenuItem\" id=\""+plugin.getId()+"PluginMenu\">");
            out.write("<span>"+plugin.getId()+"</span>");
            out.write("<div dojoType=\"dijit.Menu\" id=\""+plugin.getId()+"PluginContMenu\">");
        	   for(IPluginMenu menu : plugin.getMenus()){
                out.write("<div dojoType=\"dijit.MenuItem\" onClick=\"menuItemClicked(this.id);"+menu.getAction()+";\" ");  
                out.write("id=\""+menu.getId()+"PluginMenuId\">"+menu.getDisplayName()+"</div> ");
        	   }
        	   out.write("</div>");
        	   out.write("</div>");
        }
        
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Shape</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"shapeMgmtMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"newShape(null);createFacet('top');createCurrFacetSelector('conn1');saveShape();beginShapePoints();\"  >New face Shape</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"newShape(null)\"  >New Shape</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"saveShape(null)\"  >Save Shape</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"selectShape(null)\"  >Select Shape</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"deleteShape(null)\"  >Delete Shape</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"createFacet(null)\"  >Create facet</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"createCurrFacetSelector(null)\"  >Create Connector</div>\t\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"stopShapePoints()\"  >Stop Create Points</div>\t\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"if(ptSelector==true){ptSelector=false;}else {ptSelector=true}\"  >Point Selector mode</div>\t\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"if(pullupmode==true){pullupmode=false;}else {pullupmode=true}\"  >PullUp</div>\t\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"if(clonemode==true){clonemode=false;}else {clonemode=true}\"  >Clone Mode</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"if(bndryMoveMode==true){bndryMoveMode=false;}else {bndryMoveMode=true}\"  >Boundry Move Mode</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"if(renderDesignMode==true){renderDesignMode=false;}else {renderDesignMode=true};draw();\"  >renderDesignMode</div>\t\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"if(showPixelVal==true){showPixelVal=false;}else {showPixelVal=true};draw();\"  >ShowPixelVal</div>\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"if(controlMode==true){controlMode=false;}else {controlMode=true};draw();\"  >controlMode</div>\t\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"printAllShapeAngles();\"  >Show Angles</div>\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        <div dojoType=\"dijit.PopupMenuBarItem\">\r\n");
      out.write("\t\t\t<span>Animation</span>\r\n");
      out.write("\t\t\t<div dojoType=\"dijit.Menu\" id=\"animMgmtMenu\">\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"var a = prompt('enter name');createAnim(a);draw();\"  >Add Animation</div>\r\n");
      out.write("\t\t\t\t<div dojoType=\"dijit.MenuItem\" onClick=\"playAnim();\"  >play anim</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div dojoType=\"dojo.dnd.Target\" jsId=\"c1\" class=\"dndContainer\"\r\n");
      out.write("\t\taccept=\"text,treeNode\">\r\n");
      out.write("\t\t<div id=\"graph\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"docnode\">\r\n");
      out.write("\t\t<div id=\"docnodeheader\">Processor Documentation</div>\r\n");
      out.write("\t\t<div id=\"docval\"></div>\r\n");
      out.write("\t\t<div dojoType=\"dojox.layout.ResizeHandle\" targetId=\"docnode\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"cmdnode\">\r\n");
      out.write("\t\t<div id=\"cmdnodeheader\" style=\"\">Command Window</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<label for=\"cmdname\">cmd:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label> <input\r\n");
      out.write("\t\t\ttype=\"text\" style=\"width: 80%\" name=\"cmdname\" id=\"cmdname\"\r\n");
      out.write("\t\t\trequired=\"true\" /> <br /> <label for=\"cmdresult\">Result: </label>\r\n");
      out.write("\t\t<textarea style=\"border-color: yellow; width: 80%; height: 70%;\"\r\n");
      out.write("\t\t\tname=\"cmdresult\" id=\"cmdresult\"></textarea>\r\n");
      out.write("\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<button dojoType=\"dijit.form.Button\" type=\"button\" onclick=\"runCmd();\">Run</button>\r\n");
      out.write("\t\t<button dojoType=\"dijit.form.Button\" type=\"button\"\r\n");
      out.write("\t\t\tonclick=\"runScript(false);\">Run Script</button>\r\n");
      out.write("\t\t<button dojoType=\"dijit.form.Button\" type=\"button\"\r\n");
      out.write("\t\t\tonclick=\"runServerScript();\">Run Server Script</button>\r\n");
      out.write("\t\t<button dojoType=\"dijit.form.Button\" type=\"button\"\r\n");
      out.write("\t\t\tonclick=\"runCompile();\">Compile/Run</button>\r\n");
      out.write("\t\t<button dojoType=\"dijit.form.Button\" type=\"button\"\r\n");
      out.write("\t\t\tonclick=\"saveCache();\">SaveCache</button>\r\n");
      out.write("\t\t<button dojoType=\"dijit.form.Button\" type=\"button\"\r\n");
      out.write("\t\t\tonclick=\"getCache();\">GetCache</button>\r\n");
      out.write("\t\t<button dojoType=\"dijit.form.Button\" type=\"button\"\r\n");
      out.write("\t\t\tonclick=\"applyGraph();\">LoadGraph</button>\r\n");
      out.write("\t\t<div dojoType=\"dojox.layout.ResizeHandle\" targetId=\"cmdnode\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"histnode\">\r\n");
      out.write("\t\t<div id=\"histnodeheader\">Historical Window</div>\r\n");
      out.write("\t\t<div dojoType=\"dojox.layout.ResizeHandle\" targetId=\"histnode\"></div>\r\n");
      out.write("\t\t<div id=\"histdata\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"propnode\">\r\n");
      out.write("\t\t<div id=\"propnodeheader\">\r\n");
      out.write("\t\t\t<div id=\"ndtype\">Properties</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"jsonval\"></div>\r\n");
      out.write("\t\t<div dojoType=\"dojox.layout.ResizeHandle\" targetId=\"propnode\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div style=\"height: 0px; width: 0px; overflow: hidden;\">\r\n");
      out.write("\t\t<img src='/site/wide_5678/images/process.png' id='process.jpg' />\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div style=\"height: 0px; width: 0px; overflow: hidden;\">\r\n");
      out.write("\t\t<img src='/site/wide_5678/images/event.png' id='event.jpg' />\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div style=\"height: 0px; width: 0px; overflow: hidden;\">\r\n");
      out.write("\t\t<img src='/site/wide_5678/images/router.jpg' id='router.jpg' />\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div style=\"height: 0px; width: 0px; overflow: hidden;\">\r\n");
      out.write("\t\t<img src='/site/wide_5678/images/stream.jpg' id='stream.jpg' />\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div style=\"height: 0px; width: 0px; overflow: hidden;\"\r\n");
      out.write("\t\tid=\"dynamicicons\"></div>\r\n");
      out.write("\t<iframe id=\"estreamer\" src=\"\"\r\n");
      out.write("\t\tstyle=\"width: 0px; height: 0px; border: 0px; display: none; visibility: hidden;\"\r\n");
      out.write("\t\tframeborder=\"0\"> </iframe>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\tfunction handleAnnotDrop(f, a,compname,isui,mx,my,configobj) {\r\n");
      out.write("\t\tif(a!=null){\r\n");
      out.write("\t\t\tconsole.log(\"Dropped annotation: \"+compname +\" on \"+ a.id);\r\n");
      out.write("\t\t\tif(a.tags==null){\r\n");
      out.write("\t\t\t\ta.tags = new Array();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\ta.tags.push(compname);\r\n");
      out.write("\t\t}else\r\n");
      out.write("\t\t\tconsole.log(\"Dropped annotation: \"+compname +\" on \"+ \" Console.\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\tcomps[\"handleAnnotDrop\"] =handleAnnotDrop;\r\n");
      out.write("\tcomps[\"handleDesignDrop\"] =handleDesignDrop;\r\n");
      out.write("\tcomps[\"handleTaskDrop\"] =handleTaskDrop;\r\n");
      out.write("\tcomps[\"handleGraphDrop\"] =handleGraphDrop;\r\n");
      out.write("\t");
for(Group grp:groupMenuList){
		out.println("function handle"+grp.getId()+"Drop(f, a,compname,isui,mx,my,configobj) {");
		out.println("console.log('"+grp.getId()+"'+compname)");
		out.println("handleDefCompDrop(f, a,compname,isui,mx,my,configobj);");
		out.println("}");
		out.println("comps['handle"+grp.getId()+"Drop'] =handle"+grp.getId()+"Drop;");
		
   }
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tcomps[\"ConvertToInputPort\"] =dummy;\r\n");
      out.write("\tcomps[\"ConvertToOutputPort\"] =dummy;\r\n");
      out.write("\tcomps[\"ConvertToAuxPort\"] =dummy;\r\n");
      out.write("\tconfigs[\"ConvertToInputPort\"] = ConvertToInputPort;\r\n");
      out.write("\tconfigs[\"ConvertToOutputPort\"] = ConvertToOutputPort;\r\n");
      out.write("\tconfigs[\"ConvertToAuxPort\"] = ConvertToAuxPort;\r\n");
      out.write("\tfunction handleDefCompDrop(f, a,compname,isui,mx,my,configobj){\r\n");
      out.write("\t\tif(configs[compname]!=null){\r\n");
      out.write("\t\t\tconfigs[compname](f, a,compname,isui,mx,my,configobj);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tconsole.log(compname+\" has not way of handling..\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction ConvertToInputPort(f, a,compname,isui,mx,my,configobj) {\r\n");
      out.write("\t\tif(a!=null){\r\n");
      out.write("\t\t\tvar portid = \"port_\"+a.id+\"_\"+getUniqId();\r\n");
      out.write("\t\tvar p = createPortObj(a.normalizedx-100,a.normalizedy-100,portid,portid,\"input\",null,null);\r\n");
      out.write("\t\taddObjectToGraph(p);\r\n");
      out.write("\t\tconfigPort(mx, my, 8, 8, \"orange\", \"orange\",p,null);\r\n");
      out.write("\t\tvar c = createConnObject(p.id,a.id,getUniqId());\r\n");
      out.write("\t\taddObjectToGraph(c);\r\n");
      out.write("\t\tconnectLinks(c);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction ConvertToOutputPort(f, a,compname,isui,mx,my,configobj) {\r\n");
      out.write("\t\tif(a!=null){\r\n");
      out.write("\t\t\tvar portid = \"port_\"+a.id+\"_\"+getUniqId();\r\n");
      out.write("\t\tvar p = createPortObj(a.normalizedx+100,a.normalizedy-100,portid,portid,\"output\",null,null);\r\n");
      out.write("\t\taddObjectToGraph(p);\r\n");
      out.write("\t\tconfigPort(mx, my, 8, 8, \"orange\", \"orange\",p,null);\r\n");
      out.write("\t\tvar c = createConnObject(p.id,a.id,getUniqId());\r\n");
      out.write("\t\taddObjectToGraph(c);\r\n");
      out.write("\t\tconnectLinks(c);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction ConvertToAuxPort(f, a,compname,isui,mx,my,configobj) {\r\n");
      out.write("\t\tif(a!=null){\r\n");
      out.write("\t\t\tvar portid = \"port_\"+a.id+\"_\"+getUniqId();\r\n");
      out.write("\t\tvar p = createPortObj(a.normalizedx,a.normalizedy+200,portid,portid,\"aux\",null,null);\r\n");
      out.write("\t\taddObjectToGraph(p);\r\n");
      out.write("\t\tconfigPort(mx, my, 8, 8, \"orange\", \"orange\",p,null);\r\n");
      out.write("\t\tvar c = createConnObject(p.id,a.id,getUniqId());\r\n");
      out.write("\t\taddObjectToGraph(c);\r\n");
      out.write("\t\tconnectLinks(c);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction handleGraphDrop(f, a,compname,isui,mx,my,configobj) {\r\n");
      out.write("\t\tgetGraphFromServerByName(compname)\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction handleDesignDrop(f, a,compname,isui,mx,my,configobj) {\r\n");
      out.write("\t\tif(a!=null){\r\n");
      out.write("\t\t\tconsole.log(\"Dropped Design: \"+compname +\" on \"+ a.id);\r\n");
      out.write("\t\t\tgetGraphDesignByName(compname);\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tgetGraphDesignByName(compname);\r\n");
      out.write("\t\t\tconsole.log(\"Dropped annotation: \"+compname +\" on \"+ \" Console.\");\r\n");
      out.write("\t\t}\t\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction handleTaskDrop(f, a,compname,isui,mx,my,configobj) {\r\n");
      out.write("\t\tconsole.log(\"Dropped task \" + compname);\r\n");
      out.write("\t\t\tvar ts = taskSpecs[compname];\r\n");
      out.write("\t\t\tif(ts!=null &&ts.custom==false){\r\n");
      out.write("\t\t\t\tvar name = prompt(\"Please Enter Task Name: \");\r\n");
      out.write("\t\t\t\t if(a!=null && a.type!=null && a.type==\"connection\"){\r\n");
      out.write("\t\t\t\t    \tvar item = createAnonDefObj(mx,my,100,55,name,ts.inputs,ts.outputs,ts.aux,ts.anonType);\r\n");
      out.write("\t\t\t\t\t\tpData.data.push(item);\r\n");
      out.write("\t\t\t\t\t\tconsole.log(item);\r\n");
      out.write("\t\t\t\t        drawAnonDef(mx,my,200,80, \"orange\",\"orange\",item,null);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t var origto = a.to;\r\n");
      out.write("\t\t\t\t        a.to=item.id;\r\n");
      out.write("\t\t\t\t        a.nodes[1]=item.id\r\n");
      out.write("\t\t\t\t        var drawing= findDrawEleByIdEx(a.id);\r\n");
      out.write("\t\t\t\t        if(drawing.item!=null)\r\n");
      out.write("\t\t\t\t        drawing.item.remove();\r\n");
      out.write("\t\t\t\t        if(drawing.textnode!=null)\r\n");
      out.write("\t\t\t\t        drawing.textnode.remove();\r\n");
      out.write("\t\t\t\t        for(var i=0;i<drawing.subs.length;i++){\r\n");
      out.write("\t\t\t\t            drawing.subs[i].remove();\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t        \r\n");
      out.write("\t\t\t\t        createConnItem(item.id,origto,getUniqId());\r\n");
      out.write("\t\t\t\t        createConnItem(a.from,item.id,getUniqId());\r\n");
      out.write("\t\t\t      }else if(a!=null && a.type!=null && a.type==\"AnonDef\"){\r\n");
      out.write("\t\t\t\t\tvar xx = null;\r\n");
      out.write("\t\t\t\t\tvar yy = null;\r\n");
      out.write("\t\t\t\t\tif(a.x<mx){\r\n");
      out.write("\t\t\t\t\t\txx = a.x+a.r+50;\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\txx = a.x-a.r-50;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t/* if(a.y<my){\r\n");
      out.write("\t\t\t\t\t\tyy = a.y+a.b+50;\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tyy = a.y-a.b-50;\r\n");
      out.write("\t\t\t\t\t} \r\n");
      out.write("\t\t\t\t\tif((a.x+a.r/2)-mx<5)\r\n");
      out.write("\t\t\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tyy = a.y;\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t    \tvar item = createAnonDefObj(xx,yy,100,55,name,ts.inputs,ts.outputs,ts.aux,ts.anonType);\r\n");
      out.write("\t\t\t\t\tpData.data.push(item);\r\n");
      out.write("\t\t\t\t\tconsole.log(item);\r\n");
      out.write("\t\t\t\t\tdrawAnonDef(item.x,item.y,200,80, \"orange\",\"orange\",item,null);\r\n");
      out.write("\t\t\t\t\tcreateConnItem(a.id,item.id,getUniqId());\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t    \tvar item = createAnonDefObj(mx,my,100,55,name,ts.inputs,ts.outputs,ts.aux,ts.anonType);\r\n");
      out.write("\t\t\t\t\tpData.data.push(item);\r\n");
      out.write("\t\t\t\t\tconsole.log(item);\r\n");
      out.write("\t\t\t\t\tdrawAnonDef(mx,my,200,80, \"orange\",\"orange\",item,null);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tif(configs[compname]!=null){\r\n");
      out.write("\t\t\t\tconfigs[compname](f, a,compname,isui,mx,my,configobj);\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tconsole.log(compname+\" has not way of handling..\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction addMTaskToPage(f, a,compname,isui,mx,my,configobj) {\r\n");
      out.write("\t\tcompname = compname.toString();\r\n");
      out.write("\t\tvar name = compname.substr(6,compname.length-1);\r\n");
      out.write("\t\tconsole.log(\"Dropped mapper task \" + name);\r\n");
      out.write("\t\tif(configs[name]!=null){\r\n");
      out.write("\t\t\tconfigs[name](f, a,name,isui,mx,my,configobj);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction addWebUITaskToPage(f, a,compname,isui,mx,my,configobj) {\r\n");
      out.write("\t\tcompname = compname.toString();\r\n");
      out.write("\t\tvar name = compname.substr(11,compname.length-1);\r\n");
      out.write("\t\tconsole.log(\"Dropped mapper task \" + name);\r\n");
      out.write("\t\tif(configs[name]!=null){\r\n");
      out.write("\t\t\tconfigs[name](f, a,name,isui,mx,my,configobj);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("      ");
for(String s: mapperTaskList){
      	  out.write("configs[\"MTask:"+s+"\"] = addMTaskToPage;\n");
      	  out.write("comps[\"MTask:"+s+"\"] = dummy;\n");
      }
      out.write("\r\n");
      out.write("      ");
for (String s : webUITaskList) {
				out.write("configs[\"WebUITask:" + s + "\"] = addWebUITaskToPage;\n");
				out.write("comps[\"WebUITask:" + s + "\"] = dummy;\n");
			}
      out.write("\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("     </script>\r\n");
      out.write("     </div>\r\n");
      out.write("<div id=\"footerbar\">\r\n");
      out.write("<table><tr>\r\n");
      out.write("<td id=\"messages\">\r\n");
      out.write(" <select id=\"messageBox\" name=\"messageBox\" >\r\n");
      out.write("    <option>...</option>\r\n");
      out.write(" </select>\r\n");
      out.write("</td>\r\n");
      out.write("<td id=\"bottomCanvas\"><div id=\"bottomCanvasCont\"></div></td>\r\n");
      out.write("<td id=\"rightbottombar\" style=\"color:gray\"></td>\r\n");
      out.write("<td id=\"rightbottombar2\" style=\"color:gray\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\r\n");
      out.write("<td id=\"graphNameTd\" style=\"color:orange\">Name</td>\r\n");
      out.write("</tr></table>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function addMessageToBox(msgstr){\r\n");
      out.write("    var sel = dojo.byId(\"messageBox\");\r\n");
      out.write("    var op = dojo.create(\"option\",{innerHTML:msgstr,\"class\": \"greenText\"},sel,\"first\");\r\n");
      out.write("    sel.value=msgstr;\r\n");
      out.write("    setCssPropertt(sel,\"color\",\"#00FF33\");\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function addWarningToBox(msgstr){\r\n");
      out.write("    var sel = dojo.byId(\"messageBox\");\r\n");
      out.write("    var op=    dojo.create(\"option\",{innerHTML:msgstr,\"class\": \"orangeText\"  },sel,\"first\");\r\n");
      out.write("    sel.value=msgstr;\r\n");
      out.write("    setCssPropertt(sel,\"color\",\"orange\");\r\n");
      out.write("}\r\n");
      out.write("function addErrorToBox(msgstr){\r\n");
      out.write("\tvar sel = dojo.byId(\"messageBox\");\r\n");
      out.write("   var op = dojo.create(\"option\",{innerHTML:msgstr, \"class\": \"redText\" },sel,\"first\");\r\n");
      out.write("   sel.value=msgstr;\r\n");
      out.write("   setCssPropertt(sel,\"color\",\"red\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function addInfoToBox(msgstr){\r\n");
      out.write("    var sel = dojo.byId(\"messageBox\");\r\n");
      out.write("   var op = dojo.create(\"option\",{innerHTML:msgstr, \"class\": \"greenText\" },sel,\"first\");\r\n");
      out.write("   sel.value=msgstr;\r\n");
      out.write("   setCssPropertt(sel,\"color\",\"black\");\r\n");
      out.write("   setCssPropertt(sel,\"background-color\",\"orange\");\r\n");
      out.write("   setTimeout(function (){\r\n");
      out.write("\t   setCssPropertt(sel,\"color\",\"green\");\r\n");
      out.write("\t   setCssPropertt(sel,\"background-color\",\"black\");\r\n");
      out.write("   },2000);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("var footerCanvas = Raphael(\"bottomCanvasCont\", 80, 30);\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"/site/d3js/bullet.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("        ");

        for(IPlugin plugin : pmgr.getPlugins()){
        	for(String s : plugin.getIncludes()){
        	out.write("<script src=\"\\site\\plugins\\"+plugin.getId()+"\\"+s+"\" type=\"text/javascript\" charset=\"utf-8\"></script>");
        	}
         }
         
      out.write("\r\n");
      out.write("         <script type=\"text/javascript\">\r\n");
      out.write("         setTimeout(function (){\r\n");
      out.write("         ");

         List<String> recentMenuLst = DBHelper.getInstance().getStringList("select distinct(menu) from recent_menu limit 20;");
         for(String recentMenu : recentMenuLst){
         out.write("menuItemClickedInternal('"+recentMenu+"');");
         }
         
        
      out.write("\r\n");
      out.write("        },4000);\r\n");
      out.write("        </script>\r\n");
      out.write("<script src=\"/site/threejs/three.js\"></script>        \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
